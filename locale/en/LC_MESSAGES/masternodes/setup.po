# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Historia Core Group, Inc
# This file is distributed under the same license as the Historia package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Historia latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-04 06:56+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../masternodes/setup.rst:1
msgid ""
"This guide describes how to set up a Historia masternode. It also describes "
"various options for hosting and different wallets"
msgstr ""

#: ../../masternodes/setup.rst:1
msgid "historia, guide, masternodes, trezor, dip3, setup, bls"
msgstr ""

#: ../../masternodes/setup.rst:9
msgid "Setup"
msgstr ""

#: ../../masternodes/setup.rst:11
msgid ""
"Setting up a masternode requires a basic understanding of Linux and "
"blockchain technology, as well as an ability to follow instructions "
"closely. It also requires regular maintenance and careful security, "
"particularly if you are not storing your Historia on a hardware wallet. There"
" are some decisions to be made along the way, and optional extra steps to"
" take for increased security."
msgstr ""

#: ../../masternodes/setup.rst:18
msgid ""
"Commercial :ref:`masternode hosting services <masternode-hosting>` are "
"available if you prefer to delegate day-to-day operation of your "
"masternode to a professional operator. When using these hosting services,"
" you retain full control of the 1000 HISTORIA collateral and pay an agreed "
"percentage of your reward to the operator. It is also possible to "
"delegate your voting keys to a representative, see the :ref:`governance "
"documentation <delegating-votes>` for more information."
msgstr ""

#: ../../masternodes/setup.rst:29
msgid "Before you begin"
msgstr ""

#: ../../masternodes/setup.rst:31
msgid ""
"This guide assumes you are setting up a single masternode for the first "
"time. If you are updating a masternode, see  :ref:`here <masternode-"
"update>` instead. If Spork 15 is not yet enabled, it is not possible to "
"directly set up a DIP003 masternode. You will need to set up the "
"masternode following the `old process "
"<https://docs.historia.network/en/0.12.3/masternodes/setup.html>`_ and then work "
"through the :ref:`upgrade procedure <dip3-upgrade>`. You will need:"
msgstr ""

#: ../../masternodes/setup.rst:39
msgid "1000 Historia"
msgstr ""

#: ../../masternodes/setup.rst:40
msgid ""
"A wallet to store your Historia, preferably a hardware wallet, although Historia "
"Core wallet is also supported"
msgstr ""

#: ../../masternodes/setup.rst:42
msgid "A Linux server, preferably a Virtual Private Server (VPS)"
msgstr ""

#: ../../masternodes/setup.rst:44
msgid ""
"Historia 0.13.0 implements DIP003, which introduces several changes to how a "
"Historia masternode is set up and operated. A list of available documentation"
" appears below:"
msgstr ""

#: ../../masternodes/setup.rst:48
msgid ""
"`DIP003 Deterministic Masternode Lists "
"<https://github.com/HistoriaOffical/dips/blob/master/dip-0003.md>`__"
msgstr ""

#: ../../masternodes/setup.rst:49
msgid ":ref:`dip3-changes`"
msgstr ""

#: ../../masternodes/setup.rst:50
msgid ":ref:`dip3-dev-upgrade`"
msgstr ""

#: ../../masternodes/setup.rst:51
msgid ":ref:`Historia 0.13 Upgrade Procedure for Masternodes <dip3-upgrade>`"
msgstr ""

#: ../../masternodes/setup.rst:52
msgid ":ref:`Full masternode setup guide <masternode-setup>` (you are here)"
msgstr ""

#: ../../masternodes/setup.rst:53
msgid ":ref:`Information for users of hosted masternodes <hosted-setup>`"
msgstr ""

#: ../../masternodes/setup.rst:54
msgid ""
":ref:`Information for operators of hosted masternodes <operator-"
"transactions>`"
msgstr ""

#: ../../masternodes/setup.rst:56
msgid ""
"It is highly recommended to first read at least the list of changes "
"before continuing in order to familiarize yourself with the new concepts "
"in DIP003. This documentation describes the commands as if they were "
"entered in the Historia Core GUI by opening the console from **Tools > Debug "
"console**, but the same result can be achieved on a masternode by "
"entering the same commands and adding the prefix ``~/.historiacore/historia-cli``"
" to each command."
msgstr ""

#: ../../masternodes/setup.rst:68
msgid "Set up your VPS"
msgstr ""

#: ../../masternodes/setup.rst:70
msgid ""
"A VPS, more commonly known as a cloud server, is fully functional "
"installation of an operating system (usually Linux) operating within a "
"virtual machine. The virtual machine allows the VPS provider to run "
"multiple systems on one physical server, making it more efficient and "
"much cheaper than having a single operating system running on the \"bare "
"metal\" of each server. A VPS is ideal for hosting a Historia masternode "
"because they typically offer guaranteed uptime, redundancy in the case of"
" hardware failure and a static IP address that is required to ensure you "
"remain in the masternode payment queue. While running a masternode from "
"home on a desktop computer is technically possible, it will most likely "
"not work reliably because most ISPs allocate dynamic IP addresses to home"
" users."
msgstr ""

#: ../../masternodes/setup.rst:83
msgid ""
"We will use `Vultr <https://www.vultr.com/>`_ hosting as an example of a "
"VPS, although `DigitalOcean <https://www.digitalocean.com/>`_, `Amazon "
"EC2 <https://aws.amazon.com/ec2>`_, `Google Cloud "
"<https://cloud.google.com/compute/>`_, `Choopa "
"<https://www.choopa.com/>`_ and `OVH <https://www.ovh.com/>`_ are also "
"popular choices. First create an account and add credit. Then go to the "
"**Servers** menu item on the left and click **+** to add a new server. "
"Select a location for your new server on the following screen:"
msgstr ""

#: ../../masternodes/setup.rst:95
msgid "Vultr server location selection screen"
msgstr ""

#: ../../masternodes/setup.rst:97
msgid ""
"Select Ubuntu 18.04 x64 as the server type. We use this LTS release of "
"Ubuntu instead of the latest version because LTS releases are supported "
"with security updates for 5 years, instead of the usual 9 months."
msgstr ""

#: ../../masternodes/setup.rst:104
msgid "Vultr server type selection screen"
msgstr ""

#: ../../masternodes/setup.rst:106
msgid "Select a server size offering at least 2GB of memory."
msgstr ""

#: ../../masternodes/setup.rst:111
msgid "Vultr server size selection screen"
msgstr ""

#: ../../masternodes/setup.rst:113
msgid ""
"Enter a hostname and label for your server. In this example we will use "
"``historiamn1`` as the hostname."
msgstr ""

#: ../../masternodes/setup.rst:119
msgid "Vultr server hostname & label selection screen"
msgstr ""

#: ../../masternodes/setup.rst:121
msgid "Vultr will now install your server. This process may take a few minutes."
msgstr ""

#: ../../masternodes/setup.rst:126
msgid "Vultr server installation screen"
msgstr ""

#: ../../masternodes/setup.rst:128
msgid ""
"Click **Manage** when installation is complete and take note of the IP "
"address, username and password."
msgstr ""

#: ../../masternodes/setup.rst:134
msgid "Vultr server management screen"
msgstr ""

#: ../../masternodes/setup.rst:138
msgid "Set up your operating system"
msgstr ""

#: ../../masternodes/setup.rst:140
msgid ""
"We will begin by connecting to your newly provisioned server. On Windows,"
" we will first download an app called PuTTY to connect to the server. Go "
"to the `PuTTY download page "
"<https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`_ and "
"select the appropriate MSI installer for your system. On Mac or Linux you"
" can ssh directly from the terminal - simply type ``ssh "
"root@<server_ip>`` and enter your password when prompted."
msgstr ""

#: ../../masternodes/setup.rst:151
msgid "PuTTY download page"
msgstr ""

#: ../../masternodes/setup.rst:153
msgid ""
"Double-click the downloaded file to install PuTTY, then run the app from "
"your Start menu. Enter the IP address of the server in the **Host Name** "
"field and click **Open**. You may see a certificate warning, since this "
"is the first time you are connecting to this server. You can safely click"
" **Yes** to trust this server in the future."
msgstr ""

#: ../../masternodes/setup.rst:162
msgid "PuTTY security alert when connecting to a new server"
msgstr ""

#: ../../masternodes/setup.rst:164
msgid ""
"You are now connected to your server and should see a terminal window. "
"Begin by logging in to your server with the user ``root`` and password "
"supplied by your hosting provider."
msgstr ""

#: ../../masternodes/setup.rst:171
msgid "Password challenge when connecting to your VPS for the first time"
msgstr ""

#: ../../masternodes/setup.rst:173
msgid ""
"You should immediately change the root password and store it in a safe "
"place for security. You can copy and paste any of the following commands "
"by selecting them in your browser, pressing **Ctrl + C**, then switching "
"to the PuTTY window and right-clicking in the window. The text will paste"
" at the current cursor location::"
msgstr ""

#: ../../masternodes/setup.rst:181
msgid ""
"Enter and confirm a new password (preferably long and randomly "
"generated). Next we will create a new user with the following command, "
"replacing ``<username>`` with a username of your choice::"
msgstr ""

#: ../../masternodes/setup.rst:187
msgid ""
"You will be prompted for a password. Enter and confirm using a new "
"password (different to your root password) and store it in a safe place. "
"You will also see prompts for user information, but this can be left "
"blank. Once the user has been created, we will add them to the sudo group"
" so they can perform commands as root::"
msgstr ""

#: ../../masternodes/setup.rst:195
msgid ""
"Now, while still as root, we will update the system from the Ubuntu "
"package repository::"
msgstr ""

#: ../../masternodes/setup.rst:201
msgid ""
"The system will show a list of upgradable packages. Press **Y** and "
"**Enter** to install the packages. We will now install a firewall (and "
"some other packages we will use later), add swap memory and reboot the "
"server to apply any necessary kernel updates, and then login to our newly"
" secured environment as the new user::"
msgstr ""

#: ../../masternodes/setup.rst:209 ../../masternodes/setup.rst:219
#: ../../masternodes/setup.rst:464
msgid "(press **Y** and **Enter** to confirm)"
msgstr ""

#: ../../masternodes/setup.rst:229
msgid ""
"Add the following line at the end of the file (press tab to separate each"
" word/number), then press **Ctrl + X** to close the editor, then **Y** "
"and **Enter** save the file."
msgstr ""

#: ../../masternodes/setup.rst:237
msgid ""
"Finally, in order to prevent brute force password hacking attacks, we "
"will install fail2ban and disable root login over ssh. These steps are "
"optional, but highly recommended. Start with fail2ban::"
msgstr ""

#: ../../masternodes/setup.rst:243
msgid "Create a new configuration file::"
msgstr ""

#: ../../masternodes/setup.rst:247
msgid "And paste in the following configuration::"
msgstr ""

#: ../../masternodes/setup.rst:256
msgid ""
"Then press **Ctrl + X** to close the editor, then **Y** and **Enter** "
"save the file. Retart and enable the fail2ban service::"
msgstr ""

#: ../../masternodes/setup.rst:262
msgid "Next, open the SSH configuration file to disable root login over SSH::"
msgstr ""

#: ../../masternodes/setup.rst:266
msgid ""
"Locate the line that reads ``PermitRootLogin yes`` and set it to "
"``PermitRootLogin no``. Directly below this, add a line which reads "
"``AllowUsers <username>``, replacing ``<username>`` with the username you"
" selected above. Then press **Ctrl + X** to close the editor, then **Y** "
"and **Enter** save the file."
msgstr ""

#: ../../masternodes/setup.rst:272
msgid "Then reboot the server::"
msgstr ""

#: ../../masternodes/setup.rst:276
msgid "PuTTY will disconnect when the server reboots."
msgstr ""

#: ../../masternodes/setup.rst:278
msgid ""
"While this setup includes basic steps to protect your server against "
"attacks, much more can be done. In particular, `authenticating with a "
"public key <https://help.ubuntu.com/community/SSH/OpenSSH/Keys>`_ instead"
" of a username/password combination and `enabling automatic security "
"updates <https://help.ubuntu.com/community/AutomaticSecurityUpdates>`_ is"
" advisable. More tips are available `here <https://www.cyberciti.biz/tips"
"/linux-security.html>`__. However, since the masternode does not actually"
" store the keys to any Historia, these steps are considered beyond the scope "
"of this guide."
msgstr ""

#: ../../masternodes/setup.rst:287
msgid "Send the collateral"
msgstr ""

#: ../../masternodes/setup.rst:289
msgid ""
"A Historia address with a single unspent transaction output (UTXO) of exactly"
" 1000 HISTORIA is required to operate a masternode. Once it has been sent, "
"various keys regarding the transaction must be extracted for later entry "
"in a configuration file and registration transaction as proof to write "
"the configuration to the blockchain so the masternode can be included in "
"the deterministic list. A masternode can be started from a hardware "
"wallet or the official Historia Core wallet, although a hardware wallet is "
"highly recommended to enhance security and protect yourself against "
"hacking. This guide will describe the steps for both hardware wallets and"
" Historia Core."
msgstr ""

#: ../../masternodes/setup.rst:301
msgid "Option 1: Sending from a hardware wallet"
msgstr ""

#: ../../masternodes/setup.rst:303
msgid ""
"Set up your Trezor using the Trezor wallet at https://wallet.trezor.io/ "
"and send a test transaction to verify that it is working properly. For "
"help on this, see :ref:`this guide <hardware-trezor>` - you may also "
"choose to (carefully!) `add a passphrase <https://blog.trezor.io/hide-"
"your-trezor-wallets-with-multiple-passphrases-f2e0834026eb>`_ to your "
"Trezor to further protect your collateral. Create a new account in your "
"Trezor wallet by clicking **Add account**. Then click the **Receive** tab"
" and send exactly 1000 HISTORIA to the address displayed. If you are setting "
"up multiple masternodes, send 1000 HISTORIA to consecutive addresses within "
"the same new account. You should see the transaction as soon as the first"
" confirmation arrives, usually within a few minutes."
msgstr ""

#: ../../masternodes/setup.rst:317
msgid ""
"Trezor Wallet Receive tab showing successfully received collateral of "
"1000 HISTORIA"
msgstr ""

#: ../../masternodes/setup.rst:320
msgid ""
"Once the transaction appears, click the QR code on the right to view the "
"transaction on the blockchain. Keep this window open as we complete the "
"following steps, since we will soon need to confirm that 15 confirmations"
" exist, as shown in the following screenshot."
msgstr ""

#: ../../masternodes/setup.rst:328 ../../masternodes/setup.rst:434
msgid ""
"Trezor blockchain explorer showing 15 confirmations for collateral "
"transfer"
msgstr ""

#: ../../masternodes/setup.rst:331
msgid ""
"While we are waiting for 15 confirmations, download the latest version of"
" the Historia Masternode Tool (DMT) from the GitHub releases page `here "
"<https://github.com/Bertrand256/historia-masternode-tool/releases>`__. Unzip "
"and run the file. The following window appears."
msgstr ""

#: ../../masternodes/setup.rst:339
msgid "Historia Masternode Tool startup screen"
msgstr ""

#: ../../masternodes/setup.rst:341
msgid ""
"Click the third button from the left **Check Historia Network Connection** in"
" the top left corner of the main window to verify that the connection is "
"working. Then connect your Trezor device and click the next button **Test"
" Hardware Wallet Connection** to verify the Trezor connection is working."
msgstr ""

#: ../../masternodes/setup.rst:353
msgid "Historia Masternode Tool successful connection confirmations"
msgstr ""

#: ../../masternodes/setup.rst:355
msgid ""
"We will now use DMT to extract the transaction ID and legacy masternode "
"key (necessary for successful startup during the DIP003 transition "
"period). Carry out the following sequence of steps as shown in this "
"screenshot:"
msgstr ""

#: ../../masternodes/setup.rst:363
msgid "Historia Masternode Tool configuration steps"
msgstr ""

#: ../../masternodes/setup.rst:365
msgid "Click the **New** button."
msgstr ""

#: ../../masternodes/setup.rst:366
msgid ""
"Ensure you are on the settings page for a Non-deterministic masternode "
"and click **Generate new** to generate a legacy masternode key. Copy this"
" key into a text editor."
msgstr ""

#: ../../masternodes/setup.rst:369
msgid "Click **Alter configuration to deterministic**"
msgstr ""

#: ../../masternodes/setup.rst:370
msgid ""
"Enter a name for your masternode. The host name you specified for your "
"VPS above is a good choice."
msgstr ""

#: ../../masternodes/setup.rst:372
msgid ""
"Enter the IP address of your masternode. This was given to you by the VPS"
" provider when you set up the server."
msgstr ""

#: ../../masternodes/setup.rst:374
msgid "Enter the TCP port number. This should be 9999."
msgstr ""

#: ../../masternodes/setup.rst:375
msgid ""
"Click **Locate collateral** to view unused collateral funding "
"transactions available on the connected hardware wallet. The **Collateral"
" address**, **index** and **Collateral TX hash** fields should be filled "
"automatically"
msgstr ""

#: ../../masternodes/setup.rst:383
msgid "Historia Masternode Tool with configuration ready to start masternode"
msgstr ""

#: ../../masternodes/setup.rst:385
msgid ""
"Leave DMT open and continue with the next step: :ref:`installing Historia "
"Core on your VPS <masternode-setup-install-historiacore>`."
msgstr ""

#: ../../masternodes/setup.rst:389
msgid "Option 2: Sending from Historia Core wallet"
msgstr ""

#: ../../masternodes/setup.rst:391
msgid ""
"Open Historia Core wallet and wait for it to synchronize with the network. It"
" should look like this when ready:"
msgstr ""

#: ../../masternodes/setup.rst:397
msgid "Fully synchronized Historia Core wallet"
msgstr ""

#: ../../masternodes/setup.rst:399
msgid ""
"Click **Tools > Debug console** to open the console. Type the following "
"two commands into the console to generate a legacy masternode key "
"(necessary for successful startup during the DIP003 transition period) "
"and a new Historia address for the collateral::"
msgstr ""

#: ../../masternodes/setup.rst:410
msgid ""
"Take note of the legacy masternode private key and collateral address, "
"since we will need it later. The next step is to secure your wallet (if "
"you have not already done so). First, encrypt the wallet by selecting "
"**Settings > Encrypt wallet**. You should use a strong, new password that"
" you have never used somewhere else. Take note of your password and store"
" it somewhere safe or you will be permanently locked out of your wallet "
"and lose access to your funds. Next, back up your wallet file by "
"selecting **File > Backup Wallet**. Save the file to a secure location "
"physically separate to your computer, since this will be the only way you"
" can access our funds if anything happens to your computer. For more "
"details on these steps, see :ref:`here <historiacore-backup>`."
msgstr ""

#: ../../masternodes/setup.rst:422
msgid ""
"Now send exactly 1000 HISTORIA in a single transaction to the new address you"
" generated in the previous step. This may be sent from another wallet, or"
" from funds already held in your current wallet. Once the transaction is "
"complete, view the transaction in a `blockchain explorer "
"<http://insight.historia.network/insight/>`_ by searching for the address. You "
"will need 15 confirmations before you can start the masternode, but you "
"can continue with the next step at this point already: installing Historia "
"Core on your VPS."
msgstr ""

#: ../../masternodes/setup.rst:441
msgid "Install Historia Core"
msgstr ""

#: ../../masternodes/setup.rst:443
msgid ""
"Historia Core is the software behind both the Historia Core GUI wallet and Historia "
"masternodes. If not displaying a GUI, it runs as a daemon on your VPS "
"(historiad), controlled by a simple command interface (historia-cli)."
msgstr ""

#: ../../masternodes/setup.rst:447
msgid ""
"Open PuTTY or a console again and connect using the username and password"
" you just created for your new, non-root user. There are two options to "
"install Historia Core, an automated option using a script utility called "
"historiaman by Historia Core Team member moocowmoo, and a more complicated option"
" which will allow you to understand all of the key steps involved in "
"preparing your masternode."
msgstr ""

#: ../../masternodes/setup.rst:455
msgid "Option 1: Automated installation using historiaman"
msgstr ""

#: ../../masternodes/setup.rst:457
msgid ""
"To install Historia using historiaman, enter the following commands after logging"
" in::"
msgstr ""

#: ../../masternodes/setup.rst:466
msgid ""
"historiaman will download the latest version of Historia Core for your system, as"
" well as an initial snapshot of the blockchain to speed up the "
"bootstrapping process. Next download and install Sentinel, which is "
"required for masternodes at version 0.12.1 or higher::"
msgstr ""

#: ../../masternodes/setup.rst:473
msgid ""
"Your system is now running as a standard Historia node, and is busy "
"completing synchronisation with the blockchain. Since historiaman does not "
"automatically restart your masternode in the event of a system error, add"
" a check function to crontab to make sure it checks every minute to "
"ensure your masternode is still running::"
msgstr ""

#: ../../masternodes/setup.rst:481
msgid ""
"Choose nano as your editor and enter the following line at the end of the"
" file, after the line for sentinel::"
msgstr ""

#: ../../masternodes/setup.rst:486
msgid ""
"Press enter to make sure there is a blank line at the end of the file, "
"then press **Ctrl + X** to close the editor and **Y** and **Enter** save "
"the file. Check the sync status and wait until all blockchain "
"synchronisation and the 15 confirmations for the collateral transaction "
"are complete::"
msgstr ""

#: ../../masternodes/setup.rst:497
msgid "historiaman status output showing masternode ready to be started"
msgstr ""

#: ../../masternodes/setup.rst:499
msgid ""
"Continue with the :ref:`next step to register your masternode <register-"
"masternode>`."
msgstr ""

#: ../../masternodes/setup.rst:503
msgid "Option 2: Manual installation"
msgstr ""

#: ../../masternodes/setup.rst:505
msgid ""
"To manually download and install the components of your Historia masternode, "
"visit the `GitHub releases page "
"<https://github.com/HistoriaOffical/historia/releases>`_ and copy the link to the "
"latest ``x86_64-linux-gnu`` version. Go back to your terminal window and "
"enter the following command, pasting in the address to the latest version"
" of Historia Core by right clicking or pressing **Ctrl + V**::"
msgstr ""

#: ../../masternodes/setup.rst:515
msgid ""
"Verify the integrity of your download by running the following command "
"and comparing the output against the value for the file as shown in the "
"``SHA256SUMS.asc`` file::"
msgstr ""

#: ../../masternodes/setup.rst:523
msgid ""
"You can also optionally verify the authenticity of your download as an "
"official release by Historia Core Team. All releases of Historia are signed using"
" GPG by Alexander Block (codablock) with the key ``63A9 6B40 6102 E091``,"
" `verifiable here on Keybase <https://keybase.io/codablock>`_. Import the"
" key, download the ASC file for the current release of Historia and verify "
"the signature as follows::"
msgstr ""

#: ../../masternodes/setup.rst:536
msgid "Downloading the PGP key and verifying the signed binary"
msgstr ""

#: ../../masternodes/setup.rst:538
msgid ""
"Create a working directory for Historia, extract the compressed archive and "
"copy the necessary files to the directory::"
msgstr ""

#: ../../masternodes/setup.rst:546
msgid "Create a configuration file using the following command::"
msgstr ""

#: ../../masternodes/setup.rst:550
msgid ""
"An editor window will appear. We now need to create a configuration file "
"specifying several variables. Copy and paste the following text to get "
"started, then replace the variables specific to your configuration as "
"follows::"
msgstr ""

#: ../../masternodes/setup.rst:570
msgid "Replace the fields marked with ``XXXXXXX`` as follows:"
msgstr ""

#: ../../masternodes/setup.rst:572
msgid ""
"``rpcuser``: enter any string of numbers or letters, no special "
"characters allowed"
msgstr ""

#: ../../masternodes/setup.rst:574
msgid ""
"``rpcpassword``: enter any string of numbers or letters, no special "
"characters allowed"
msgstr ""

#: ../../masternodes/setup.rst:576
msgid ""
"``masternodeprivkey``: this is the legacy masternode private key you "
"generated in the previous step"
msgstr ""

#: ../../masternodes/setup.rst:578
msgid "``externalip``: this is the IP address of your VPS"
msgstr ""

#: ../../masternodes/setup.rst:580
msgid "The result should look something like this:"
msgstr ""

#: ../../masternodes/setup.rst:585
msgid "Entering key data in historia.conf on the masternode"
msgstr ""

#: ../../masternodes/setup.rst:587
msgid ""
"Press **Ctrl + X** to close the editor and **Y** and **Enter** save the "
"file. You can now start running Historia on the masternode to begin "
"synchronization with the blockchain::"
msgstr ""

#: ../../masternodes/setup.rst:593
msgid ""
"You will see a message reading **Historia Core server starting**. We will now"
" install Sentinel, a piece of software which operates as a watchdog to "
"communicate to the network that your node is working properly::"
msgstr ""

#: ../../masternodes/setup.rst:604
msgid ""
"You will see a message reading **historiad not synced with network! Awaiting "
"full sync before running Sentinel.** Add historiad and sentinel to crontab to"
" make sure it runs every minute to check on your masternode::"
msgstr ""

#: ../../masternodes/setup.rst:610
msgid ""
"Choose nano as your editor and enter the following lines at the end of "
"the file::"
msgstr ""

#: ../../masternodes/setup.rst:616
msgid ""
"Press enter to make sure there is a blank line at the end of the file, "
"then press **Ctrl + X** to close the editor and **Y** and **Enter** save "
"the file. We now need to wait for 15 confirmations of the collateral "
"transaction to complete, and wait for the blockchain to finish "
"synchronizing on the masternode. You can use the following commands to "
"monitor progress::"
msgstr ""

#: ../../masternodes/setup.rst:625
msgid "When synchronisation is complete, you should see the following response::"
msgstr ""

#: ../../masternodes/setup.rst:639
msgid ""
"Continue with the next step to construct the ProTx transaction required "
"to enable your masternode."
msgstr ""

#: ../../masternodes/setup.rst:646
msgid "Register your masternode"
msgstr ""

#: ../../masternodes/setup.rst:648
msgid ""
"DIP003 introduces several changes to how a masternode is set up and "
"operated. These are described briefly under :ref:`dip3-changes` in this "
"documentation, or in full detail in `DIP003 "
"<https://github.com/HistoriaOffical/dips/blob/master/dip-0003.md>`_ itself. It is"
" highly recommended to first read at least the brief documentation before"
" continuing in order to familiarize yourself with the new concepts in "
"DIP003."
msgstr ""

#: ../../masternodes/setup.rst:658
msgid "Option 1: Registering from a hardware wallet"
msgstr ""

#: ../../masternodes/setup.rst:660
msgid ""
"Go back to DMT and ensure that all fields from the previous step are "
"still filled out correctly.  Click **Generate new** for the three private"
" keys required for a DIP003 deterministic masternode:"
msgstr ""

#: ../../masternodes/setup.rst:664
msgid "Owner private key"
msgstr ""

#: ../../masternodes/setup.rst:665
msgid "Operator private key"
msgstr ""

#: ../../masternodes/setup.rst:666
msgid "Voting private key"
msgstr ""

#: ../../masternodes/setup.rst:671
msgid "Historia Masternode Tool ready to register a new masternode"
msgstr ""

#: ../../masternodes/setup.rst:673
msgid "Then click **Send ProRegTx** and confirm the following two messages:"
msgstr ""

#: ../../masternodes/setup.rst:681
msgid "Historia Masternode Tool confirmation dialogs to register a masternode"
msgstr ""

#: ../../masternodes/setup.rst:683
msgid ""
"The BLS secret key must be entered in the ``historia.conf`` file on the "
"masternode. This allows the masternode to watch the blockchain for "
"relevant Pro*Tx transactions, and will cause it to start serving as a "
"masternode when the signed ProRegTx is broadcast by the owner, as we just"
" did above. Edit the configuration file on your masternode as follows::"
msgstr ""

#: ../../masternodes/setup.rst:692 ../../masternodes/setup.rst:781
msgid ""
"The editor appears with the existing masternode configuration. Add this "
"line to the end of the file, replacing the key with your BLS secret key "
"generated above::"
msgstr ""

#: ../../masternodes/setup.rst:698 ../../masternodes/setup.rst:787
msgid ""
"Press enter to make sure there is a blank line at the end of the file, "
"then press **Ctrl + X** to close the editor and **Y** and **Enter** save "
"the file. We now need to restart the masternode for this change to take "
"effect. Enter the following commands, waiting a few seconds in between to"
" give Historia Core time to shut down::"
msgstr ""

#: ../../masternodes/setup.rst:708
msgid ""
"At this point you can monitor your masternode using ``historiaman/historiaman "
"status``, by entering ``~/.historiacore/historia-cli masternode status`` or using"
" the **Get status** function in DMT. The final result should appear as "
"follows:"
msgstr ""

#: ../../masternodes/setup.rst:716
msgid "historia-cli masternode status output showing successfully started masternode"
msgstr ""

#: ../../masternodes/setup.rst:718 ../../masternodes/setup.rst:958
msgid ""
"At this point you can safely log out of your server by typing ``exit``. "
"Congratulations! Your masternode is now running."
msgstr ""

#: ../../masternodes/setup.rst:725
msgid "Option 2: Registering from Historia Core wallet"
msgstr ""

#: ../../masternodes/setup.rst:728
msgid "Identify the funding transaction"
msgstr ""

#: ../../masternodes/setup.rst:730
msgid ""
"If you used an address in Historia Core wallet for your collateral "
"transaction, you now need to find the txid of the transaction. Click "
"**Tools > Debug console** and enter the following command::"
msgstr ""

#: ../../masternodes/setup.rst:736
msgid "This should return a string of characters similar to this::"
msgstr ""

#: ../../masternodes/setup.rst:742
msgid ""
"The first long string is your transaction hash, while the last number is "
"the index."
msgstr ""

#: ../../masternodes/setup.rst:749
msgid "Generate a BLS key pair"
msgstr ""

#: ../../masternodes/setup.rst:751
msgid ""
"A public/private BLS key pair is required for the operator of the "
"masternode. If you are using a hosting service, they may provide you with"
" their public key, and you can skip this step. If you are hosting your "
"own masternode or have agreed to provide your host with the BLS private "
"key, generate a BLS public/private keypair as follows::"
msgstr ""

#: ../../masternodes/setup.rst:764
msgid ""
"**These keys are NOT stored by the wallet and must be kept secure, "
"similar to the value provided in the past by the** ``masternode genkey`` "
"**command.**"
msgstr ""

#: ../../masternodes/setup.rst:769
msgid "Add the private key to your masternode configuration"
msgstr ""

#: ../../masternodes/setup.rst:771
msgid ""
"The public key will be used in following steps. The private key must be "
"entered in the ``historia.conf`` file on the masternode. This allows the "
"masternode to watch the network for relevant Pro*Tx transactions, and "
"will cause it to start serving as a masternode when the signed ProRegTx "
"is broadcast by the owner (final step below). Log in to your masternode "
"using ``ssh`` or PuTTY and edit the configuration file on your masternode"
" as follows::"
msgstr ""

#: ../../masternodes/setup.rst:797
msgid ""
"We will now prepare the transaction used to register a DIP003 masternode "
"on the network."
msgstr ""

#: ../../masternodes/setup.rst:801
msgid "Prepare a ProRegTx transaction"
msgstr ""

#: ../../masternodes/setup.rst:803
msgid ""
"First, we need to get a new, unused address from the wallet to serve as "
"the owner address. This is different to the collateral address. It must "
"also be used as the voting address if Spork 15 is not yet active. "
"Generate a new address as follows::"
msgstr ""

#: ../../masternodes/setup.rst:812
msgid ""
"Then either generate or choose an existing second address to receive the "
"owner's masternode payouts. It is also possible to use an address "
"external to the wallet::"
msgstr ""

#: ../../masternodes/setup.rst:820
msgid ""
"You can also optionally generate and fund a third address to pay the "
"transaction fee. If you selected an external payout address, you must "
"specify a fee source address. Either the payout address or fee source "
"address must have enough balance to pay the transaction fee, or the final"
" `register_submit` transaction will fail."
msgstr ""

#: ../../masternodes/setup.rst:826
msgid ""
"The private keys to the owner and fee source addresses must exist in the "
"wallet submitting the transaction to the network. If your wallet is "
"protected by a password, it must now be unlocked to perform the following"
" commands. Unlock your wallet for 5 minutes::"
msgstr ""

#: ../../masternodes/setup.rst:833
msgid ""
"We will now prepare an unsigned ProRegTx special transaction using the "
"``protx register_prepare`` command. This command has the following "
"syntax::"
msgstr ""

#: ../../masternodes/setup.rst:840
msgid ""
"Open a text editor such as notepad to prepare this command. Replace each "
"argument to the command as follows:"
msgstr ""

#: ../../masternodes/setup.rst:843
msgid ""
"``collateralHash``: The txid of the 1000 Historia collateral funding "
"transaction"
msgstr ""

#: ../../masternodes/setup.rst:845
msgid "``collateralIndex``: The output index of the 1000 Historia funding transaction"
msgstr ""

#: ../../masternodes/setup.rst:847
msgid ""
"``ipAndPort``: Masternode IP address and port, in the format "
"``x.x.x.x:yyyy``"
msgstr ""

#: ../../masternodes/setup.rst:849
msgid ""
"``ownerKeyAddr``: The new Historia address generated above for the "
"owner/voting address"
msgstr ""

#: ../../masternodes/setup.rst:851
msgid ""
"``operatorPubKey``: The BLS public key generated above (or provided by "
"your hosting service)"
msgstr ""

#: ../../masternodes/setup.rst:853
msgid ""
"``votingKeyAddr``: The new Historia address generated above, or the address "
"of a delegate, used for proposal voting"
msgstr ""

#: ../../masternodes/setup.rst:855
msgid ""
"``operatorReward``: The percentage of the block reward allocated to the "
"operator as payment"
msgstr ""

#: ../../masternodes/setup.rst:857
msgid ""
"``payoutAddress``: A new or existing Historia address to receive the owner's "
"masternode rewards"
msgstr ""

#: ../../masternodes/setup.rst:859
msgid ""
"``feeSourceAddress``: An (optional) address used to fund ProTx fee. "
"``payoutAddress`` will be used if not specified."
msgstr ""

#: ../../masternodes/setup.rst:862
msgid ""
"Note that the operator is responsible for :ref:`specifying their own "
"reward <dip3-update-service>` address in a separate ``update_service`` "
"transaction if you specify a non-zero ``operatorReward``. The owner of "
"the masternode collateral does not specify the operator's payout address."
msgstr ""

#: ../../masternodes/setup.rst:868
msgid "Example (remove line breaks if copying)::"
msgstr ""

#: ../../masternodes/setup.rst:880 ../../masternodes/setup.rst:909
#: ../../masternodes/setup.rst:935
msgid "Output::"
msgstr ""

#: ../../masternodes/setup.rst:888
msgid ""
"Next we will use the ``collateralAddress`` and ``signMessage`` fields to "
"sign the transaction, and the output of the ``tx`` field to submit the "
"transaction."
msgstr ""

#: ../../masternodes/setup.rst:893
msgid "Sign the ProRegTx transaction"
msgstr ""

#: ../../masternodes/setup.rst:895
msgid ""
"We will now sign the content of the ``signMessage`` field using the "
"private key for the collateral address as specified in "
"``collateralAddress``. Note that no internet connection is required for "
"this step, meaning that the wallet can remain disconnected from the "
"internet in cold storage to sign the message. In this example we will "
"again use Historia Core, but it is equally possible to use the signing "
"function of a hardware wallet. The command takes the following syntax::"
msgstr ""

#: ../../masternodes/setup.rst:905 ../../masternodes/setup.rst:931
msgid "Example::"
msgstr ""

#: ../../masternodes/setup.rst:915
msgid "Submit the signed message"
msgstr ""

#: ../../masternodes/setup.rst:917
msgid ""
"We will now submit the ProRegTx special transaction to the blockchain to "
"register the masternode. This command must be sent from a Historia Core "
"wallet holding a balance, since a standard transaction fee is involved. "
"The command takes the following syntax::"
msgstr ""

#: ../../masternodes/setup.rst:924
msgid "Where:"
msgstr ""

#: ../../masternodes/setup.rst:926
msgid ""
"``tx``: The serialized transaction previously returned in the ``tx`` "
"output field from the ``protx register_prepare`` command"
msgstr ""

#: ../../masternodes/setup.rst:928
msgid ""
"``sig``: The message signed with the collateral key from the "
"``signmessage`` command"
msgstr ""

#: ../../masternodes/setup.rst:939
msgid ""
"Your masternode is now registered and will appear on the Deterministic "
"Masternode List after the transaction is mined to a block. You can view "
"this list on the **Masternodes -> DIP3 Masternodes** tab of the Historia Core"
" wallet, or in the console using the command ``protx list valid``, where "
"the txid of the final ``protx register_submit`` transaction identifies "
"your DIP003 masternode. Note again that all functions related to DIP003 "
"will only take effect once Spork 15 is enabled on the network. You can "
"view the spork status using the ``spork active`` command."
msgstr ""

#: ../../masternodes/setup.rst:948
msgid ""
"At this point you can go back to your terminal window and monitor your "
"masternode using ``historiaman/historiaman status``, by entering ``~/.historiacore"
"/historia-cli masternode status`` or using the **Get status** function in "
"DMT. The final result should appear as follows:"
msgstr ""

#: ../../masternodes/setup.rst:956
msgid "historiaman status output showing successfully started masternode"
msgstr ""

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Historia masternode, "
#~ "visit https://historia.network/wallets on your "
#~ "computer to find the link to the"
#~ " latest Historia Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Historia Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Historia Core (0.12.2.2"
#~ " in the example) by right clicking"
#~ " or pressing **Ctrl + V**::"
#~ msgstr ""

#~ msgid ""
#~ "Verify the integrity of your download"
#~ " by running the following command and"
#~ " comparing the output against the "
#~ "value for the file as shown on "
#~ "the Historia website under **Hash File**::"
#~ msgstr ""

#~ msgid ""
#~ "While we are waiting for 15 "
#~ "confirmations, download the latest version "
#~ "of the Historia Masternode Tool (DMT) "
#~ "from the Github releases page here. "
#~ "Unzip and run the file. The "
#~ "following window appears."
#~ msgstr ""

#~ msgid ""
#~ "While this setup includes basic steps"
#~ " to protect your server against "
#~ "attacks, much more can be done. In"
#~ " particular, `authenticating with a public"
#~ " key <https://help.ubuntu.com/community/SSH/OpenSSH/Keys>`_"
#~ " instead of a username/password "
#~ "combination, `installing fail2ban "
#~ "<https://www.linode.com/docs/security/using-fail2ban-"
#~ "for-security>`_ to block login brute "
#~ "force attacks, `disabling root login "
#~ "<https://help.ubuntu.com/lts/serverguide/user-management.html>`_"
#~ " and `enabling automatic security updates"
#~ " <https://help.ubuntu.com/community/AutomaticSecurityUpdates>`_ "
#~ "is advisable. More tips are available"
#~ " `here <https://www.cyberciti.biz/tips /linux-"
#~ "security.html>`__. However, since the "
#~ "masternode does not actually store the"
#~ " keys to any Historia, these steps "
#~ "are considered beyong the scope of "
#~ "this guide."
#~ msgstr ""

#~ msgid ""
#~ "While we are waiting for 15 "
#~ "confirmations, download the latest version "
#~ "of the Historia Masternode Tool (DMT) "
#~ "from the Github releases page `here "
#~ "<https://github.com/Bertrand256/historia-masternode-"
#~ "tool/releases>`__. Unzip and run the "
#~ "file. The following window appears."
#~ msgstr ""

#~ msgid ""
#~ "A wallet to store your Historia, "
#~ "either a hardware wallet or Historia "
#~ "Core wallet"
#~ msgstr ""

#~ msgid ""
#~ "We will begin by connecting to "
#~ "your newly provisioned server. On "
#~ "Windows, we will first download an "
#~ "app called PuTTY to connect to the"
#~ " server. Go to the PuTTY download "
#~ "page here and select the appropriate "
#~ "MSI installer for your system. On "
#~ "Mac or Linux you can ssh directly"
#~ " from the terminal - simply type "
#~ "``ssh root@<server_ip>`` and enter your "
#~ "password when prompted."
#~ msgstr ""

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Historia masternode, "
#~ "visit https://historia.network/wallets on your "
#~ "computer to find the link to the"
#~ " latest Historia Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Historia Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Historia Core (0.12.2.3"
#~ " in the example) by right clicking"
#~ " or pressing **Ctrl + V**::"
#~ msgstr ""

#~ msgid ""
#~ "You can also optionally verify the "
#~ "authenticity of your download as an "
#~ "official release by Historia Core Team. "
#~ "All releases of Historia are signed "
#~ "using GPG by Holger Schinzel with "
#~ "the key ``4B88 269A BD8D F332``, "
#~ "`verifiable here on Keybase "
#~ "<https://keybase.io/schinzelh>`_. Import the key,"
#~ " download the ASC file for the "
#~ "current release of Historia and verify "
#~ "the signature as follows::"
#~ msgstr ""

#~ msgid ""
#~ "Open Historia Core wallet and wait for"
#~ " it to synchronize with the network."
#~ " It should like this when ready:"
#~ msgstr ""

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Historia masternode, "
#~ "visit https://historia.network/wallets on your "
#~ "computer to find the link to the"
#~ " latest Historia Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Historia Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Historia Core (0.12.3.1"
#~ " in the example) by right clicking"
#~ " or pressing **Ctrl + V**::"
#~ msgstr ""

#~ msgid ""
#~ "This guide assumes you are setting "
#~ "up a masternode for the first "
#~ "time. If you are updating a "
#~ "masternode, see :ref:`here <masternode-"
#~ "update>` instead. You will need:"
#~ msgstr ""

#~ msgid ""
#~ "This guide also assumes you will "
#~ "be working from a Windows computer. "
#~ "However, since most of the work is"
#~ " done on your Linux VPS, alternative"
#~ " steps for using macOS or Linux "
#~ "will be indicated where necessary."
#~ msgstr ""

#~ msgid ""
#~ "Set up your Trezor using the "
#~ "Trezor wallet at https://wallet.trezor.io/ and"
#~ " send a test transaction to verify"
#~ " that it is working properly. For "
#~ "help on this, see :ref:`this guide "
#~ "<hardware-trezor>` - you may also "
#~ "choose to (carefully!) `add a passphrase"
#~ " <https://blog.trezor.io/hide- your-trezor-"
#~ "wallets-with-multiple-passphrases-f2e0834026eb>`_"
#~ " to your Trezor to further protect"
#~ " your collateral. Create a new "
#~ "account in your Trezor wallet by "
#~ "clicking **Add account**. Then click the"
#~ " **Receive** tab and send exactly "
#~ "1000 HISTORIA to the address displayed. "
#~ "You should see the transaction as "
#~ "soon as the first confirmation arrives,"
#~ " usually within a few minutes."
#~ msgstr ""

#~ msgid ""
#~ "You will see a message reading "
#~ "**historiad not synced with network! "
#~ "Awaiting full sync before running "
#~ "Sentinel.** Add sentinel to crontab to"
#~ " make sure it runs every minute "
#~ "to check on your masternode::"
#~ msgstr ""

#~ msgid ""
#~ "Choose nano as your editor and "
#~ "enter the following line at the "
#~ "end of the file::"
#~ msgstr ""

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Historia masternode, "
#~ "visit https://historia.network/wallets on your "
#~ "computer to find the link to the"
#~ " latest Historia Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Historia Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Historia Core (0.12.3.2"
#~ " in the example) by right clicking"
#~ " or pressing **Ctrl + V**::"
#~ msgstr ""

#~ msgid ""
#~ "While this setup includes basic steps"
#~ " to protect your server against "
#~ "attacks, much more can be done. In"
#~ " particular, `authenticating with a public"
#~ " key <https://help.ubuntu.com/community/SSH/OpenSSH/Keys>`_"
#~ " instead of a username/password "
#~ "combination, `installing fail2ban "
#~ "<https://www.linode.com/docs/security/using-fail2ban-"
#~ "for-security>`_ to block login brute "
#~ "force attacks, `disabling root login "
#~ "<https://help.ubuntu.com/lts/serverguide/user-management.html>`_"
#~ " and `enabling automatic security updates"
#~ " <https://help.ubuntu.com/community/AutomaticSecurityUpdates>`_ "
#~ "is advisable. More tips are available"
#~ " `here <https://www.cyberciti.biz/tips /linux-"
#~ "security.html>`__. However, since the "
#~ "masternode does not actually store the"
#~ " keys to any Historia, these steps "
#~ "are considered beyond the scope of "
#~ "this guide."
#~ msgstr ""

#~ msgid "historia, guide, masternodes, trezor"
#~ msgstr ""

#~ msgid ""
#~ "If you prefer to use a masternode"
#~ " hosting service, several community members"
#~ " provide hosting at `masternode.me "
#~ "<https://masternode.me/>`_, `node40.com "
#~ "<https://www.node40.com/hosting/>`_, `historiamasternode.io "
#~ "<http://historiamasternode.io/>`_ or `masternodehosting "
#~ "<https://masternodehosting.com/>`_. When using these"
#~ " hosting services, all you have to"
#~ " do is send a single transaction "
#~ "of 1000 HISTORIA to a specific address"
#~ " and communicate the transaction ID "
#~ "to the hosting service. Simply follow"
#~ " the steps here."
#~ msgstr ""

#~ msgid ""
#~ "This guide is heavily based on "
#~ "previous guides written by `Bertrand256 "
#~ "<https://github.com/Bertrand256/historia-masternode- "
#~ "tool/blob/master/README.md>`_, `moocowmoo "
#~ "<https://github.com/moocowmoo/historiaman/blob/master/README.md>`_, "
#~ "`tao <https://historia.network/forum/threads/taos-"
#~ "masternode-setup-guide-for- dummies-"
#~ "updated-for-12-1.2680/>`_, `BolehVPN "
#~ "<https://HistoriaOffical.atlassian.net/wiki/spaces/DOC/pages/24019061>`_ "
#~ "and tungfa. Tao's hugely popular "
#~ "original guide and support thread is "
#~ "available `here <https://historia.network/forum/threads"
#~ "/taos-masternode- setup-guide-for-"
#~ "dummies-updated-for-12-1.2680/>`__, as well "
#~ "many more guides for specific cases "
#~ "in this forum."
#~ msgstr ""

#~ msgid ""
#~ "This guide assumes you are setting "
#~ "up a single masternode for the "
#~ "first time. If you are updating a"
#~ " masternode, see :ref:`here <masternode-"
#~ "update>` instead. You will need:"
#~ msgstr ""

#~ msgid ""
#~ "We also assume you will be working"
#~ " from a Windows computer. However, "
#~ "since most of the work is done "
#~ "on your Linux VPS, alternative steps "
#~ "for using macOS or Linux will be"
#~ " indicated where necessary."
#~ msgstr ""

#~ msgid ""
#~ "A VPS, more commonly known as a"
#~ " cloud server, is fully functional "
#~ "installation of an operating system "
#~ "(usually Linux) operating within a "
#~ "virtual machine. The virtual machine "
#~ "allows the VPS provider to run "
#~ "multiple systems on one physical server,"
#~ " making it more efficient and much"
#~ " cheaper than having a single "
#~ "operating system running on the \"bare"
#~ " metal \" of each server. A VPS"
#~ " is ideal for hosting a Historia "
#~ "masternode because they typically offer "
#~ "guaranteed uptime, redundancy in the "
#~ "case of hardware failure and a "
#~ "static IP address that is required "
#~ "to ensure you remain in the "
#~ "masternode payment queue. While running "
#~ "a masternode from home on a "
#~ "desktop computer is technically possible, "
#~ "it will most likely not work "
#~ "reliably because most ISPs allocate "
#~ "dynamic IP addresses to home users."
#~ msgstr ""

#~ msgid ""
#~ "We will use `Vultr <https://www.vultr.com/>`_"
#~ " hosting as an example of a "
#~ "VPS, although `DigitalOcean "
#~ "<https://www.digitalocean.com/>`_, `Amazon EC2 "
#~ "<https://aws.amazon.com/ec2>`_, `Google Cloud "
#~ "<https://cloud.google.com/compute/>`_, `Choopa "
#~ "<https://www.choopa.com/>`_ and `OVH "
#~ "<https://www.ovh.com/>`_ are also popular "
#~ "choices. First create an account and "
#~ "add credit. Then go to the Servers"
#~ " menu item on the left and "
#~ "click **+** to add a new server."
#~ " Select a location for your new "
#~ "server on the following screen:"
#~ msgstr ""

#~ msgid ""
#~ "Select Ubuntu 16.04 x64 as the "
#~ "server type. We use 16.04 instead "
#~ "of the latest version because 16.04 "
#~ "is an LTS release of Ubuntu, which"
#~ " will be supported with security "
#~ "updates for 5 years instead of the"
#~ " usual 9 months."
#~ msgstr ""

#~ msgid ""
#~ "While this setup includes basic steps"
#~ " to protect your server against "
#~ "attacks, much more can be done. In"
#~ " particular, `authenticating with a public"
#~ " key <https://help.ubuntu.com/community/SSH/OpenSSH/Keys>`_"
#~ " instead of a username/password "
#~ "combination, `installing fail2ban "
#~ "<https://www.linode.com/docs/security/using-fail2ban-"
#~ "for-security>`_ to block login brute "
#~ "force attacks and `enabling automatic "
#~ "security updates "
#~ "<https://help.ubuntu.com/community/AutomaticSecurityUpdates>`_ "
#~ "is advisable. More tips are available"
#~ " `here <https://www.cyberciti.biz/tips /linux-"
#~ "security.html>`__. However, since the "
#~ "masternode does not actually store the"
#~ " keys to any Historia, these steps "
#~ "are considered beyond the scope of "
#~ "this guide."
#~ msgstr ""

#~ msgid ""
#~ "A Historia address with a single "
#~ "unspent transaction output (UTXO) of "
#~ "exactly 1000 HISTORIA is required to "
#~ "operate a masternode. Once it has "
#~ "been sent, various keys regarding the"
#~ " transaction must be extracted for "
#~ "later entry in a configuration file "
#~ "as proof that the transaction was "
#~ "completed successfully. A masternode can "
#~ "be started from a hardware wallet "
#~ "or the official Historia Core wallet, "
#~ "although a hardware wallet is highly "
#~ "recommended to enhance security and "
#~ "protect yourself against hacking. This "
#~ "guide will describe the steps for "
#~ "both hardware wallets and Historia Core."
#~ msgstr ""

#~ msgid ""
#~ "Set up your Trezor using the "
#~ "Trezor wallet at https://wallet.trezor.io/ and"
#~ " send a test transaction to verify"
#~ " that it is working properly. For "
#~ "help on this, see :ref:`this guide "
#~ "<hardware-trezor>` - you may also "
#~ "choose to (carefully!) `add a passphrase"
#~ " <https://blog.trezor.io/hide- your-trezor-"
#~ "wallets-with-multiple-passphrases-f2e0834026eb>`_"
#~ " to your Trezor to further protect"
#~ " your collateral. Create a new "
#~ "account in your Trezor wallet by "
#~ "clicking **Add account**. Then click the"
#~ " **Receive** tab and send exactly "
#~ "1000 HISTORIA to the address displayed. "
#~ "If you are setting up multiple "
#~ "masternodes, send 1000 HISTORIA to "
#~ "consecutive addresses within the same "
#~ "new account. You should see the "
#~ "transaction as soon as the first "
#~ "confirmation arrives, usually within a "
#~ "few minutes."
#~ msgstr ""

#~ msgid ""
#~ "Click **Check RPC connection** in the"
#~ " top left corner of the main "
#~ "window to verify that the connection "
#~ "is working. Then connect your Trezor "
#~ "device and click **Test HW** to "
#~ "verify the Trezor connection is working."
#~ msgstr ""

#~ msgid ""
#~ "We will now use DMT to extract "
#~ "the transaction ID. Carry out the "
#~ "following sequence of steps as shown "
#~ "in this screenshot from DMT developer"
#~ " Bertrand256:"
#~ msgstr ""

#~ msgid ""
#~ "Enter the name of your masternode "
#~ "here. This should match the hostname "
#~ "as defined when setting up your "
#~ "server, historiamn1 in this case. You "
#~ "can view this in the first line"
#~ " of the output of historiaman/historiaman "
#~ "status."
#~ msgstr ""

#~ msgid ""
#~ "Enter the IP address of your "
#~ "masternode here. This was given to "
#~ "you by the VPS provider when you"
#~ " set up the server."
#~ msgstr ""

#~ msgid "Click Generate new to generate a new masternode private key."
#~ msgstr ""

#~ msgid ""
#~ "Copy the collateral address where you"
#~ " sent the 1000 HISTORIA collateral from"
#~ " your Trezor Wallet and paste it "
#~ "in this field."
#~ msgstr ""

#~ msgid ""
#~ "Click the arrow → to derive the"
#~ " BIP32 path from your collateral "
#~ "address. You can verify this against "
#~ "the BIP32 path shown on the "
#~ "receive tab in your Trezor Wallet "
#~ "for the transaction."
#~ msgstr ""

#~ msgid ""
#~ "Click Lookup to find the collateral "
#~ "TX ID for the transaction which "
#~ "transferred the collateral to the "
#~ "address. You can verify this against "
#~ "the TX ID shown on the "
#~ "confirmation page of the blockchain "
#~ "explorer for your collateral address."
#~ msgstr ""

#~ msgid ""
#~ "Leave DMT open, take note of the"
#~ " masternode private key and collateral "
#~ "address and continue with the next "
#~ "step: :ref:`installing Historia Core on your"
#~ " VPS <masternode-setup-install-historiacore>`."
#~ msgstr ""

#~ msgid ""
#~ "Click **Tools > Debug console** to "
#~ "open the console. Type the following "
#~ "two commands into the console to "
#~ "generate a masternode key and get "
#~ "a fresh address::"
#~ msgstr ""

#~ msgid "Generating a masternode private key in Historia Core wallet"
#~ msgstr ""

#~ msgid ""
#~ "Take note of the masternode private "
#~ "key and collateral address, since we "
#~ "will need it later. The next step"
#~ " is to secure your wallet (if "
#~ "you have not already done so). "
#~ "First, encrypt the wallet by selecting"
#~ " **Settings > Encrypt wallet**. You "
#~ "should use a strong, new password "
#~ "that you have never used somewhere "
#~ "else. Take note of your password "
#~ "and store it somewhere safe or you"
#~ " will be permanently locked out of"
#~ " your wallet and lose access to "
#~ "your funds. Next, back up your "
#~ "wallet file by selecting **File > "
#~ "Backup Wallet**. Save the file to "
#~ "a secure location physically separate to"
#~ " your computer, since this will be"
#~ " the only way you can access "
#~ "our funds if anything happens to "
#~ "your computer. For more details on "
#~ "these steps, see :ref:`here <historiacore-"
#~ "backup>`."
#~ msgstr ""

#~ msgid ""
#~ "Now send exactly 1000 HISTORIA in a"
#~ " single transaction to the account "
#~ "address you generated in the previous"
#~ " step. This may be sent from "
#~ "another wallet, or from funds already"
#~ " held in your current wallet. Once"
#~ " the transaction is complete, view "
#~ "the transaction in a `blockchain "
#~ "explorer <http://insight.historia.network/insight/>`_ by "
#~ "searching for the address. You will "
#~ "need 15 confirmations before you can "
#~ "start the masternode, but you can "
#~ "continue with the next step at "
#~ "this point already: installing Historia Core"
#~ " on your VPS."
#~ msgstr ""

#~ msgid ""
#~ "historiaman will download the latest version"
#~ " of Historia Core for your system, "
#~ "as well as an initial snapshot of"
#~ " the blockchain to speed up the "
#~ "bootstrapping process. Next download and "
#~ "install sentinel, which is required for"
#~ " masternodes at version 12.1 or "
#~ "higher::"
#~ msgstr ""

#~ msgid ""
#~ "Your system is now running as a"
#~ " standard Historia node, and is busy "
#~ "completing synchronisation with the "
#~ "blockchain. We now need to enter "
#~ "the masternode private key generated in"
#~ " the previous step. Edit the "
#~ "configuration file using the following "
#~ "command::"
#~ msgstr ""

#~ msgid ""
#~ "Uncomment the last two lines by "
#~ "deleting the # symbol at the start"
#~ " of the line, then paste the "
#~ "masternode private key you generated "
#~ "after ``masternodeprivkey=``. You can simply"
#~ " click the right mouse button to "
#~ "paste into the terminal window. Press"
#~ " **Ctrl + X** to close the "
#~ "editor and **Y** and **Enter** save "
#~ "the file."
#~ msgstr ""

#~ msgid "Entering masternodeprivkey in historia.conf on the masternode"
#~ msgstr ""

#~ msgid ""
#~ "At this point you should restart "
#~ "historiad to load the new configuration "
#~ "file by typing the following::"
#~ msgstr ""

#~ msgid ""
#~ "Press **Y** and **Enter** to confirm."
#~ " Then check the sync status and "
#~ "wait until all blockchain synchronisation "
#~ "and the 15 confirmations for the "
#~ "collateral transaction are complete::"
#~ msgstr ""

#~ msgid ""
#~ "historiaman does not automatically restart "
#~ "your masternode in the event of a"
#~ " system error. Add a check function"
#~ " to crontab to make sure it "
#~ "checks every minute to ensure your "
#~ "masternode is still running::"
#~ msgstr ""

#~ msgid ""
#~ "Press enter to make sure there is"
#~ " a blank line at the end of "
#~ "the file, then press **Ctrl + X**"
#~ " to close the editor and **Y** "
#~ "and **Enter** save the file."
#~ msgstr ""

#~ msgid ""
#~ "Continue with the :ref:`next step to "
#~ "start your masternode <masternode-setup-"
#~ "start>`."
#~ msgstr ""

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Historia masternode, "
#~ "visit https://historia.network/wallets on your "
#~ "computer to find the link to the"
#~ " latest Historia Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Historia Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Historia Core by "
#~ "right clicking or pressing **Ctrl + "
#~ "V**::"
#~ msgstr ""

#~ msgid ""
#~ "You can optionally verify the integrity"
#~ " of your download by running the "
#~ "following command and comparing the "
#~ "output against the value for the "
#~ "file as shown on the Historia website"
#~ " under **Hash File**::"
#~ msgstr ""

#~ msgid "Link to the hash file to verify download integrity"
#~ msgstr ""

#~ msgid ""
#~ "Create a working directory for Historia, "
#~ "extract the compressed archive, copy the"
#~ " necessary files to the directory and"
#~ " set them as executable::"
#~ msgstr ""

#~ msgid "Clean up unneeded files::"
#~ msgstr ""

#~ msgid ""
#~ "``masternodeprivkey``: this is the private "
#~ "key you generated in the previous "
#~ "step"
#~ msgstr ""

#~ msgid "Continue with the next step to start your masternode."
#~ msgstr ""

#~ msgid "Start your masternode"
#~ msgstr ""

#~ msgid ""
#~ "Depending on how you sent your "
#~ "masternode collateral, you will need to"
#~ " start your masternode with a command"
#~ " sent either by your hardware wallet"
#~ " or by Historia Core wallet. Before "
#~ "you continue, you must ensure that "
#~ "your 1000 HISTORIA collateral transaction "
#~ "has at least 15 confirmation, and "
#~ "that historiad is running and fully "
#~ "synchronized with the blockchain on your"
#~ " masternode. See the previous step "
#~ "for details on how to do this. "
#~ "During the startup process, your "
#~ "masternode may pass through the "
#~ "following states:"
#~ msgstr ""

#~ msgid ""
#~ "MASTERNODE_SYNC: This indicates the data "
#~ "currently being synchronised in the "
#~ "masternode"
#~ msgstr ""

#~ msgid ""
#~ "MASTERNODE_SYNC_FAILED: Synchronisation could not"
#~ " complete, check your firewall and "
#~ "restart historiad"
#~ msgstr ""

#~ msgid ""
#~ "WATCHDOG_EXPIRED: Waiting for sentinel to "
#~ "restart, make sure it is entered "
#~ "in crontab"
#~ msgstr ""

#~ msgid "NEW_START_REQUIRED: Start command must be sent from wallet"
#~ msgstr ""

#~ msgid "PRE_ENABLED: Waiting for network to recognize started masternode"
#~ msgstr ""

#~ msgid "ENABLED: Masternode successfully started"
#~ msgstr ""

#~ msgid ""
#~ "If you masternode does not seem to"
#~ " start immediately, do not arbitrarily "
#~ "issue more start commands. Each time "
#~ "you do so, you will reset your "
#~ "position in the payment queue."
#~ msgstr ""

#~ msgid "Option 1: Starting from a hardware wallet"
#~ msgstr ""

#~ msgid ""
#~ "Go back to DMT and ensure that "
#~ "all fields are filled out correctly. "
#~ "Click **Lookup** to find the collateral"
#~ " TX ID for the transaction which "
#~ "transferred the collateral to the "
#~ "address if you were not able to"
#~ " do so earlier. Then click **Start"
#~ " Masternode using Hardware Wallet** and "
#~ "confirm the following two messages:"
#~ msgstr ""

#~ msgid "Historia Masternode Tool confirmation dialogs to start a masternode"
#~ msgstr ""

#~ msgid ""
#~ "At this point you can monitor your"
#~ " masternode using ``historiaman/historiaman status``, "
#~ "by entering ``~/.historiacore/historia-cli masternode"
#~ " status`` or using the **Get status**"
#~ " function in DMT. You will probably"
#~ " need to wait around 30 minutes "
#~ "as the node passes through the "
#~ "PRE_ENABLED stage and finally reaches "
#~ "ENABLED. Give it some time, the "
#~ "final result should appear as follows:"
#~ msgstr ""

#~ msgid ""
#~ "At this point you can safely log"
#~ " out of your server by typing "
#~ "exit. Congratulations! Your masternode is "
#~ "now running."
#~ msgstr ""

#~ msgid "Option 2: Starting from Historia Core wallet"
#~ msgstr ""

#~ msgid ""
#~ "The first long string is your "
#~ "transaction hash, while the last number"
#~ " is the index. We now need to"
#~ " create a file called *masternode.conf* "
#~ "for this wallet in order to be "
#~ "able to use it to issue the "
#~ "command to start your masternode on "
#~ "the network. Open a new text file"
#~ " in Notepad (or TextEdit on macOS,"
#~ " gedit on Linux) and enter the "
#~ "following information:"
#~ msgstr ""

#~ msgid "**Label**: Any single word used to identify your masternode, e.g. MN1"
#~ msgstr ""

#~ msgid ""
#~ "**IP and port**: The IP address "
#~ "and port (usually 9999) configured in"
#~ " the historia.conf file, separated by a"
#~ " colon (:)"
#~ msgstr ""

#~ msgid ""
#~ "**Masternode private key**: This is the"
#~ " result of your masternode genkey "
#~ "command earlier, also the same as "
#~ "configured in the historia.conf file"
#~ msgstr ""

#~ msgid ""
#~ "**Transaction hash**: The txid we just"
#~ " identified using masternode outputs"
#~ msgstr ""

#~ msgid "**Index**: The index we just identified using masternode outputs"
#~ msgstr ""

#~ msgid ""
#~ "Enter all of this information on a"
#~ " single line with each item separated"
#~ " by a space, for example::"
#~ msgstr ""

#~ msgid ""
#~ "Save this file in the **HistoriaCore** "
#~ "data folder on the PC running the"
#~ " Historia Core wallet using the filename"
#~ " *masternode.conf*. You may need to "
#~ "enable **View hidden items** to view "
#~ "this folder. Be sure to select "
#~ "**All files** if using Notepad so "
#~ "you don't end up with a "
#~ "*.conf.txt* file extension by mistake. "
#~ "For different operating systems, the "
#~ "HistoriaCore folder can be found in "
#~ "the following locations (copy and paste"
#~ " the shortcut text into the **Save**"
#~ " dialog to find it quickly):"
#~ msgstr ""

#~ msgid "Platform"
#~ msgstr ""

#~ msgid "Path"
#~ msgstr ""

#~ msgid "Shortcut"
#~ msgstr ""

#~ msgid "Linux"
#~ msgstr ""

#~ msgid "``/home/yourusername/.historiacore``"
#~ msgstr ""

#~ msgid "``~/.historiacore``"
#~ msgstr ""

#~ msgid "macOS"
#~ msgstr ""

#~ msgid "``/Macintosh HD/Library/Application Support``"
#~ msgstr ""

#~ msgid "``~/Library/Application Support/HistoriaCore``"
#~ msgstr ""

#~ msgid "Windows"
#~ msgstr ""

#~ msgid "``C:\\Users\\yourusername\\AppData\\Roaming\\Historia Core``"
#~ msgstr ""

#~ msgid "``%APPDATA%\\HistoriaCore``"
#~ msgstr ""

#~ msgid ""
#~ "Now close your text editor and "
#~ "also shut down and restart Historia "
#~ "Core wallet. Historia Core will recognize"
#~ " masternode.conf during startup, and is "
#~ "now ready to activate your masternode."
#~ " Go to **Settings > Unlock Wallet**"
#~ " and enter your wallet passphrase. "
#~ "Then click **Tools > Debug console** "
#~ "again and enter the following command"
#~ " to start your masternode (replace "
#~ "MN1 with the label for your "
#~ "masternode)::"
#~ msgstr ""

#~ msgid ""
#~ "At this point you can go back "
#~ "to your terminal window and monitor "
#~ "your masternode using ``historiaman/historiaman "
#~ "status``, by entering ``~/.historiacore/historia- cli"
#~ " masternode status`` or using the "
#~ "**Get status** function in DMT. You "
#~ "will probably need to wait around "
#~ "30 minutes as the node passes "
#~ "through the PRE_ENABLED stage and "
#~ "finally reaches ENABLED. Give it some"
#~ " time, the final result should appear"
#~ " as follows:"
#~ msgstr ""

#~ msgid ""
#~ "You can also optionally verify the "
#~ "authenticity of your download as an "
#~ "official release by Historia Core Team. "
#~ "All releases of Historia are signed "
#~ "using GPG by UdjinM6 with the key"
#~ " ``8359 2BD1 400D 58D9``, `verifiable "
#~ "here on Keybase <https://keybase.io/udjinm6>`_. "
#~ "Import the key, download the ASC "
#~ "file for the current release of "
#~ "Historia and verify the signature as "
#~ "follows::"
#~ msgstr ""

#~ msgid ""
#~ "You can also optionally generate and "
#~ "fund a third address to pay the"
#~ " transaction fee. The private key to"
#~ " this address must be available to"
#~ " the wallet submitting the transaction "
#~ "to the network. We will now "
#~ "prepare an unsigned ProRegTx special "
#~ "transaction using the ``protx "
#~ "register_prepare`` command. This command has"
#~ " the following syntax::"
#~ msgstr ""

#~ msgid ":ref:`dip3-upgrade`"
#~ msgstr ""

#~ msgid ""
#~ "Finally, in order to prevent brute "
#~ "force password hacking attacks, open the"
#~ " SSH configuration file to disable "
#~ "root login over SSH::"
#~ msgstr ""

#~ msgid ""
#~ "Locate the line that reads "
#~ "``PermitRootLogin yes`` and set it to"
#~ " ``PermitRootLogin no``. Directly below "
#~ "this, add a line which reads "
#~ "``AllowUsers <username>``, replacing ``<username>``"
#~ " with the username you selected "
#~ "above. The press **Ctrl + X** to"
#~ " close the editor, then **Y** and "
#~ "**Enter** save the file."
#~ msgstr ""

#~ msgid "Then reboot the server:"
#~ msgstr ""

#~ msgid ""
#~ "While this setup includes basic steps"
#~ " to protect your server against "
#~ "attacks, much more can be done. In"
#~ " particular, `authenticating with a public"
#~ " key <https://help.ubuntu.com/community/SSH/OpenSSH/Keys>`_"
#~ " instead of a username/password "
#~ "combination, `installing fail2ban "
#~ "<https://www.linode.com/docs/security/using-fail2ban-"
#~ "for-security>`_ to block login brute "
#~ "force attacks and `enabling automatic "
#~ "security updates "
#~ "<https://help.ubuntu.com/community/AutomaticSecurityUpdates>`_ "
#~ "is advisable. More tips are available"
#~ " `here <https://www.cyberciti.biz/tips/linux-"
#~ "security.html>`__. However, since the "
#~ "masternode does not actually store the"
#~ " keys to any Historia, these steps "
#~ "are considered beyond the scope of "
#~ "this guide."
#~ msgstr ""

#~ msgid ""
#~ "Then either generate or choose an "
#~ "existing second address to receive the"
#~ " owner's masternode payouts::"
#~ msgstr ""

#~ msgid ""
#~ "You can also optionally generate and "
#~ "fund a third address to pay the"
#~ " transaction fee. The private keys to"
#~ " the owner and fee source addresses"
#~ " must exist in the wallet submitting"
#~ " the transaction to the network. If"
#~ " your wallet is protect by a "
#~ "password, it must now be unlocked "
#~ "to perform the following commands. "
#~ "Unlock your wallet for 5 minutes::"
#~ msgstr ""

