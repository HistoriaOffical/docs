# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Historia Core Group, Inc
# This file is distributed under the same license as the Historia package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Historia latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-11 06:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../masternodes/maintenance.rst:1
msgid ""
"Maintaining a Historia masternode involves staying up to date with the latest"
" version, voting and handling payments"
msgstr ""

#: ../../masternodes/maintenance.rst:1
msgid ""
"historia, cryptocurrency, masternode, maintenance, maintain, payments, "
"withdrawal, voting, monitoring, dip3, upgrade, deterministic"
msgstr ""

#: ../../masternodes/maintenance.rst:9
msgid "Maintenance"
msgstr ""

#: ../../masternodes/maintenance.rst:11
msgid ""
"Masternodes require regular maintenance to ensure you do not drop off the"
" payment queue. This includes promptly installing updates to Historia, as "
"well as maintaining the security and performance of the server. In "
"addition, masternodes should vote on proposals and perform other tasks in"
" the interest of the network and the value of the Historia they hold."
msgstr ""

#: ../../masternodes/maintenance.rst:21
msgid "Masternode Software Update"
msgstr ""

#: ../../masternodes/maintenance.rst:23
msgid ""
"The Historia Core software requires regular updates in order to remain "
"consistent with the current network consensus. Depending on whether you "
"installed Historia manually or using historiaman, you must follow the procedure "
"appropriate for your masternode, as described below."
msgstr ""

#: ../../masternodes/maintenance.rst:30
msgid "Option 1: Updating from historiaman"
msgstr ""

#: ../../masternodes/maintenance.rst:32
msgid ""
"To update Historia using historiaman, log in to your server and enter the "
"following commands::"
msgstr ""

#: ../../masternodes/maintenance.rst:38
msgid "Check the status of your masternode::"
msgstr ""

#: ../../masternodes/maintenance.rst:42 ../../masternodes/maintenance.rst:95
msgid "The Historia software on the masternode is now updated."
msgstr ""

#: ../../masternodes/maintenance.rst:46
msgid "Option 2: Manual update"
msgstr ""

#: ../../masternodes/maintenance.rst:48
msgid ""
"To update Historia manually, log in to your server using ssh or PuTTY. If "
"your crontab contains an entry to automatically restart historiad, invoke "
"``crontab -e`` and comment out the appropriate line by adding the ``#`` "
"character. It should look something like this::"
msgstr ""

#: ../../masternodes/maintenance.rst:55
msgid "Then stop Historia running::"
msgstr ""

#: ../../masternodes/maintenance.rst:59
msgid ""
"Visit the `GitHub releases page "
"<https://github.com/HistoriaOffical/historia/releases>`_ and copy the link to the "
"latest x86_64-linux-gnu version. Go back to your terminal window and "
"enter the following command, pasting in the address to the latest version"
" of Historia Core by right clicking or pressing **Ctrl + V**::"
msgstr ""

#: ../../masternodes/maintenance.rst:68
msgid ""
"Verify the integrity of your download by running the following command "
"and comparing the output against the value for the file as shown in the "
"``SHA256SUMS.asc`` file::"
msgstr ""

#: ../../masternodes/maintenance.rst:74
msgid "Extract the compressed archive and copy the new files to the directory::"
msgstr ""

#: ../../masternodes/maintenance.rst:80
msgid "Restart Historia::"
msgstr ""

#: ../../masternodes/maintenance.rst:84
msgid ""
"You will see a message reading \"Historia Core server starting\". We will now"
" update Sentinel::"
msgstr ""

#: ../../masternodes/maintenance.rst:91
msgid ""
"Finally, uncomment the line to automatically restart Historia in your crontab"
" by invoking ``crontab -e`` again and deleting the ``#`` character."
msgstr ""

#: ../../masternodes/maintenance.rst:101
msgid "Updating Masternode Information"
msgstr ""

#: ../../masternodes/maintenance.rst:103
msgid ""
"Periodically, it may be necessary to update masternode information if any"
" information relating to the owner or operator changes. Examples may "
"include a change in IP address, change in owner/operator payout address, "
"or change in percentage of the reward allocated to an operator. It is "
"also possible to revoke a masternode's registered status (in the event of"
" a security breach, for example) to force both owner and operator to "
"update their details."
msgstr ""

#: ../../masternodes/maintenance.rst:114
msgid "ProUpServTx"
msgstr ""

#: ../../masternodes/maintenance.rst:116
msgid ""
"A Provider Update Service Transaction (ProUpServTx) is used to update "
"information relating to the operator. An operator can update the IP "
"address and port fields of a masternode entry. If a non-zero "
"operatorReward was set in the initial ProRegTx, the operator may also set"
" the scriptOperatorPayout field in the ProUpServTx. If "
"scriptOperatorPayout is not set and operatorReward is non-zero, the owner"
" gets the full masternode reward. The ProUpServTx takes the following "
"syntax::"
msgstr ""

#: ../../masternodes/maintenance.rst:126 ../../masternodes/maintenance.rst:159
#: ../../masternodes/maintenance.rst:190
msgid "Where:"
msgstr ""

#: ../../masternodes/maintenance.rst:128
msgid "``proTxHash``: The hash of the initial ProRegTx"
msgstr ""

#: ../../masternodes/maintenance.rst:129
msgid "``ipAndPort``: IP and port in the form \"ip:port\""
msgstr ""

#: ../../masternodes/maintenance.rst:130 ../../masternodes/maintenance.rst:193
msgid ""
"``operatorKey``: The operator BLS private key associated with the "
"registered operator public key"
msgstr ""

#: ../../masternodes/maintenance.rst:132
msgid ""
"``operatorPayoutAddress`` (optional): The address used for operator "
"reward payments. Only allowed when the ProRegTx had a non-zero "
"``operatorReward`` value."
msgstr ""

#: ../../masternodes/maintenance.rst:135 ../../masternodes/maintenance.rst:196
msgid ""
"``feeSourceAddress`` (optional): An address used to fund ProTx fee. "
"``operatorPayoutAddress`` will be used if not specified."
msgstr ""

#: ../../masternodes/maintenance.rst:138 ../../masternodes/maintenance.rst:199
msgid "Example::"
msgstr ""

#: ../../masternodes/maintenance.rst:144
msgid ""
"The masternode is now removed from the PoSe-banned list, and the IP:port "
"and operator reward addresses are updated."
msgstr ""

#: ../../masternodes/maintenance.rst:150
msgid "ProUpRegTx"
msgstr ""

#: ../../masternodes/maintenance.rst:152
msgid ""
"A Provider Update Registrar Transaction (ProUpRegTx) is used to update "
"information relating to the owner. An owner can update the operator's BLS"
" public key (e.g. to nominate a new operator), the voting address and "
"their own payout address. The ProUpRegTx takes the following syntax::"
msgstr ""

#: ../../masternodes/maintenance.rst:161 ../../masternodes/maintenance.rst:192
msgid "``proTxHash``: The transaction id of the initial ProRegTx"
msgstr ""

#: ../../masternodes/maintenance.rst:162
msgid ""
"``operatorKeyAddr``: An updated BLS public key, or 0 to use the last on-"
"chain operator key"
msgstr ""

#: ../../masternodes/maintenance.rst:164
msgid ""
"``votingKeyAddr``: An updated voting key address, or 0 to use the last "
"on-chain operator key"
msgstr ""

#: ../../masternodes/maintenance.rst:166
msgid ""
"``payoutAddress``: An updated Historia address for owner payments, or 0 to "
"use the last on-chain operator key"
msgstr ""

#: ../../masternodes/maintenance.rst:168
msgid ""
"``feeSourceAddress`` (optional): An address used to fund ProTx fee. "
"``PayoutAddress`` will be used if not specified."
msgstr ""

#: ../../masternodes/maintenance.rst:171
msgid "Example to update payout address::"
msgstr ""

#: ../../masternodes/maintenance.rst:177
msgid "ProUpRevTx"
msgstr ""

#: ../../masternodes/maintenance.rst:179
msgid ""
"A Provider Update Revocation Transaction (ProUpRevTx) is used by the "
"operator to terminate service or signal the owner that a new BLS key is "
"required. It will immediately put the masternode in the PoSe-banned "
"state. The owner must then issue a ProUpRegTx to set a new operator key. "
"After the ProUpRegTx is mined to a block, the new operator must issue a "
"ProUpServTx to update the service-related metadata and clear the PoSe- "
"banned state (revive the masternode). The ProUpRevTx takes the following "
"syntax::"
msgstr ""

#: ../../masternodes/maintenance.rst:195
msgid ""
"``reason`` (optional): Integer value indicating the revocation `reason "
"<https://github.com/HistoriaOffical/dips/blob/master/dip-0003.md#appendix-a"
"-reasons-for-self-revocation-of-operators>`__"
msgstr ""

#: ../../masternodes/maintenance.rst:205
msgid "HistoriaCentral voting, verification and monitoring"
msgstr ""

#: ../../masternodes/maintenance.rst:207
msgid ""
"HistoriaCentral is a community-supported website managed by community member "
"Rango. It has become a *de facto* site for discussion of budget proposals"
" and to facilitate voting from a graphical user interface, but also "
"offers functions to monitor masternodes."
msgstr ""

#: ../../masternodes/maintenance.rst:213
msgid "Adding your masternode to HistoriaCentral"
msgstr ""

#: ../../masternodes/maintenance.rst:215
msgid ""
"`Historiacentral <https://www.historiacentral.org/>`_ allows you to vote on "
"proposals from the comfort of your browser. After completing "
"`registration <https://www.historiacentral.org/register>`_, go to the "
"`masternodes <https://www.historiacentral.org/masternodes>`_ page and click "
"the **Add masternode now** button. Enter your collateral address on the "
"following screen:"
msgstr ""

#: ../../masternodes/maintenance.rst:225
msgid "Adding a masternode to HistoriaCentral"
msgstr ""

#: ../../masternodes/maintenance.rst:227
msgid ""
"Click **Add masternode**. Your masternode has now been added to "
"HistoriaCentral."
msgstr ""

#: ../../masternodes/maintenance.rst:231
msgid "Enabling voting from HistoriaCentral"
msgstr ""

#: ../../masternodes/maintenance.rst:233
msgid ""
"Click **Edit** under **Voting privkeys** to enter your masternode private"
" key to enable voting through the HistoriaCentral web interface. Enter a "
"voting passphrase (not the same as your login password, but equally "
"important to remember!) and enter the private key (the same key you used "
"in the historia.conf file on your masternode) on the following screen:"
msgstr ""

#: ../../masternodes/maintenance.rst:243
msgid "Adding voting privkeys to HistoriaCentral"
msgstr ""

#: ../../masternodes/maintenance.rst:245
msgid ""
"It is important to note that the private key to start your masternode is "
"unrelated to the private keys to the collateral address storing your 1000"
" HISTORIA. These keys can be used to issue commands on behalf of the "
"masternode, such as voting, but cannot be used to access the collateral. "
"The keys are encrypted on your device and never stored as plain text on "
"HistoriaCentral servers. Once you have entered the key, click **Store "
"encrypted voting privkeys on server**. You can now vote on proposals from"
" the HistoriaCentral web interface."
msgstr ""

#: ../../masternodes/maintenance.rst:255
msgid "Verifying ownership"
msgstr ""

#: ../../masternodes/maintenance.rst:257
msgid ""
"You can also issue a message from your address to verify ownership of "
"your masternode to HistoriaCentral. Click **Unverified** under **Ownership** "
"and the following screen will appear:"
msgstr ""

#: ../../masternodes/maintenance.rst:264
msgid "Verifying ownership of your masternode to HistoriaCentral"
msgstr ""

#: ../../masternodes/maintenance.rst:266
msgid ""
"Instructions on how to sign your collateral address using a software "
"wallet appear. If you are using a hardware wallet other than Trezor, you "
"will need to use the DMT app to sign the address. If you are using the "
"Trezor hardware wallet, go to your `Trezor wallet "
"<https://wallet.trezor.io/>`_, copy the collateral address and click "
"**Sign & Verify**. The following screen will appear, where you can enter "
"the message provided by HistoriaCentral and the address you wish to sign:"
msgstr ""

#: ../../masternodes/maintenance.rst:277
msgid "Signing a message from the Trezor Wallet"
msgstr ""

#: ../../masternodes/maintenance.rst:279
msgid ""
"Click **Sign**, confirm on your Trezor device and enter your PIN to sign "
"the message. A message signature will appear in the **Signature** box. "
"Copy this signature and paste it into the box on HistoriaCentral and click "
"**Verify ownership**. Verification is now complete."
msgstr ""

#: ../../masternodes/maintenance.rst:287
msgid "Masternode ownership has been successfully verified"
msgstr ""

#: ../../masternodes/maintenance.rst:290
msgid "Installing the HistoriaCentral monitoring script"
msgstr ""

#: ../../masternodes/maintenance.rst:292
msgid ""
"HistoriaCentral offers a service to monitor your masternode, automatically "
"restart historiad in the event of a crash and send email in the event of an "
"error. Go to the `Account settings "
"<https://www.historiacentral.org/account/edit>`_ page and generate a new API "
"key, adding a PIN to your account if necessary. Scroll to the following "
"screen:"
msgstr ""

#: ../../masternodes/maintenance.rst:302
msgid "Setting up the HistoriaCentral monitoring script"
msgstr ""

#: ../../masternodes/maintenance.rst:304
msgid ""
"Copy the link to the current version of the historiacentral script by right- "
"click and selecting **Copy link address**. Open PuTTY and connect to your"
" masternode, then type::"
msgstr ""

#: ../../masternodes/maintenance.rst:310
msgid ""
"Replace the link with the current version of historiacentral-updater as "
"necessary. Decompress the archive using the following command::"
msgstr ""

#: ../../masternodes/maintenance.rst:315
msgid "View your masternode configuration details by typing::"
msgstr ""

#: ../../masternodes/maintenance.rst:319
msgid ""
"Copy the values for ``rpcuser`` and ``rpcpassword``. Then edit the "
"historiacentral configuration by typing::"
msgstr ""

#: ../../masternodes/maintenance.rst:324
msgid ""
"Replace the values for ``api_key``, your masternode collateral address, "
"``rpc_user``, ``rpc_password``, ``daemon_binary`` and ``daemon_datadir`` "
"according to your system. A common configuration, where ``lwhite`` is the"
" name of the Linux user, may look like this:"
msgstr ""

#: ../../masternodes/maintenance.rst:332
msgid "HistoriaCentral updater configuration file"
msgstr ""

#: ../../masternodes/maintenance.rst:357
msgid ""
"Press **Ctrl + X** to exit, confirm you want save with **Y** and press "
"**Enter**. Test your configuration by running the historiacentral script, "
"then check the website. If it was successful, you will see that an update"
" has been sent::"
msgstr ""

#: ../../masternodes/maintenance.rst:367
msgid "Manually testing the HistoriaCentral updater"
msgstr ""

#: ../../masternodes/maintenance.rst:372
msgid "HistoriaCentral updater has successfully sent data to the HistoriaCentral site"
msgstr ""

#: ../../masternodes/maintenance.rst:375
msgid ""
"Once you have verified your configuration is working, we can edit the "
"crontab on your system to schedule the dcupdater script to run every 2 "
"minutes. This allows the system to give you early warning in the event of"
" a fault and will even restart the historiad daemon if it hangs or crashes. "
"This is an effective way to make sure you do not drop off the payment "
"queue. Type the following command::"
msgstr ""

#: ../../masternodes/maintenance.rst:384
msgid ""
"Select an editor if necessary and add the following line to your crontab "
"after the line for sentinel, replacing lwhite with your username on your "
"system::"
msgstr ""

#: ../../masternodes/maintenance.rst:393
msgid "Editing crontab to run the HistoriaCentral updater automatically"
msgstr ""

#: ../../masternodes/maintenance.rst:395
msgid ""
"Press **Ctrl + X** to exit, confirm you want save with **Y** and press "
"**Enter**. The dcupdater script will now run every two minutes, restart "
"historiad whenever necessary and email you in the event of an error."
msgstr ""

#: ../../masternodes/maintenance.rst:400
msgid "Masternode monitoring tools"
msgstr ""

#: ../../masternodes/maintenance.rst:402
msgid ""
"Several sites operated by community members are available to monitor key "
"information and statistics relating to the masternode network."
msgstr ""

#: ../../masternodes/maintenance.rst:406
msgid "Block Explorers"
msgstr ""

#: ../../masternodes/maintenance.rst:408
msgid ""
"Since Historia is a public blockchain, it is possible to use block explorers "
"to view the balances of any Historia public address, as well as examine the "
"transactions entered in any given block. Each unique transaction is also "
"searchable by its txid. A number of block explorers are available for the"
" Historia network."
msgstr ""

#: ../../masternodes/maintenance.rst:414
msgid ""
"`CryptoID <https://chainz.cryptoid.info/>`__ offers a `Historia blockchain "
"explorer <https://chainz.cryptoid.info/historia/>`__ and a `function "
"<https://chainz.cryptoid.info/historia/masternodes.dws>`__ to view and map "
"Historia masternodes."
msgstr ""

#: ../../masternodes/maintenance.rst:418
msgid ""
"`BitInfoCharts <https://bitinfocharts.com>`_ offers a `page "
"<https://bitinfocharts.com/historia/>`_ of price statistics and information "
"and a `blockchain explorer <https://bitinfocharts.com/historia/explorer/>`__."
msgstr ""

#: ../../masternodes/maintenance.rst:422
msgid ""
"`CoinCheckup <https://coincheckup.com/coins/historia/charts>`__ offers a "
"range of statistics and data on most blockchains, including Historia."
msgstr ""

#: ../../masternodes/maintenance.rst:424
msgid ""
"`CoinPayments <https://www.coinpayments.net/>`__ offers a simple `Historia "
"blockchain explorer "
"<http://explorer.coinpayments.net/index.php?chain=7>`__."
msgstr ""

#: ../../masternodes/maintenance.rst:427
msgid ""
"`Historia.org <https://historia.network/>`__ includes two blockchain explorers at"
" `explorer.historia.network <http://explorer.historia.network/>`__ and `insight.historia.network "
"<http://insight.historia.network/>`__."
msgstr ""

#: ../../masternodes/maintenance.rst:430
msgid ""
"`Trezor <https://trezor.io/>`__ operates a `blockchain explorer <https "
"://historia-bitcore1.trezor.io/>`__ powered by a `Historia fork "
"<https://github.com/HistoriaOffical/insight-ui-historia>`__ of `insight "
"<https://insight.is/>`__, an advanced blockchain API tool"
msgstr ""

#: ../../masternodes/maintenance.rst:436
msgid "Historia Masternode Tool"
msgstr ""

#: ../../masternodes/maintenance.rst:438
msgid "https://github.com/Bertrand256/historia-masternode-tool"
msgstr ""

#: ../../masternodes/maintenance.rst:440
msgid ""
"Written and maintained by community member Bertrand256, Historia Masternode "
"Tool (DMT) allows you to start a masternode from all major hardware "
"wallets such as Trezor, Ledger and KeepKey. It also supports functions to"
" vote on proposals and withdraw masternode payments without affecting the"
" collateral transaction."
msgstr ""

#: ../../masternodes/maintenance.rst:447
msgid "HISTORIA Ninja"
msgstr ""

#: ../../masternodes/maintenance.rst:449
msgid "https://www.historianinja.pl"
msgstr ""

#: ../../masternodes/maintenance.rst:451
msgid ""
"HISTORIA Ninja, operated by forum member and Historia Core developer elbereth, "
"offers key statistics on the adoption of different versions of Historia "
"across the masternode network. Several features to monitor governance of "
"the Historia, the masternode payment schedule and the geographic distribution"
" of masternodes are also available, as well as a simple blockchain "
"explorer."
msgstr ""

#: ../../masternodes/maintenance.rst:459
msgid "HistoriaCentral"
msgstr ""

#: ../../masternodes/maintenance.rst:461
msgid "https://www.historiacentral.org"
msgstr ""

#: ../../masternodes/maintenance.rst:463
msgid ""
"HistoriaCentral, operated by forum member rango, offers an advanced service "
"to monitor masternodes and vote on budget proposals through an advanced "
"web interface. An `Android app <https://play.google.com/store/apps/detai "
"ls?id=net.paregov.android.historiacentral>`_ is also available."
msgstr ""

#: ../../masternodes/maintenance.rst:469
msgid "Masternode.me"
msgstr ""

#: ../../masternodes/maintenance.rst:471
msgid "https://stats.masternode.me"
msgstr ""

#: ../../masternodes/maintenance.rst:473
msgid ""
"Masternode.me, operated by forum member and Historia Core developer "
"moocowmoo, offers sequential reports on the price, generation rate, "
"blockchain information and some information on masternodes."
msgstr ""

#: ../../masternodes/maintenance.rst:478
msgid "Historia Masternode Information"
msgstr ""

#: ../../masternodes/maintenance.rst:480
msgid "http://178.254.23.111/~pub/Historia/Historia_Info.html"
msgstr ""

#: ../../masternodes/maintenance.rst:482
msgid ""
"This site, operated by forum member and Historia Core developer crowning, "
"offers a visual representation of many key statistics of the Historia "
"masternode network, including graphs of the total masternode count over "
"time, price information and network distribution."
msgstr ""

#~ msgid "Selecting the UTXOs to use an inputs in the withdrawal transaction"
#~ msgstr ""

#~ msgid ""
#~ "Written and maintained by community "
#~ "member Bertrand256, Historia Masternode Tool "
#~ "(DMT) allows you to start a "
#~ "masternode from all major hardware "
#~ "wallets such as Trezor, Ledger and "
#~ "KeepKey. It also supports functions to"
#~ " vote on proposals and withdraw "
#~ "masternode payments without affecting the "
#~ "collateral transation."
#~ msgstr ""

#~ msgid ""
#~ "Minor version updates to Historia (e.g. "
#~ "from 0.12.1.4 to 0.12.1.5) usually do"
#~ " not result in changes to the "
#~ "protocol version, while major version "
#~ "updates (e.g. from 0.12.1.5 to 0.12.2.0)"
#~ " will usually increase the network "
#~ "protocol version. If the protocol "
#~ "version did not change, you DO NOT"
#~ " need to restart your masternode if"
#~ " you complete the update within 60"
#~ " minutes. If the protocol version did"
#~ " change, you must issue a start "
#~ "command from your wallet. Do not "
#~ "send start commands to your masternode"
#~ " if not necessary, as it may "
#~ "send you to the back of the "
#~ "payment queue."
#~ msgstr ""

#~ msgid ""
#~ "After some time, all statuses should "
#~ "turn green, in particular **masternode "
#~ "started: YES** and **masternode network "
#~ "state: ENABLED**. If you do need "
#~ "to restart your masternode, update the"
#~ " software version of the wallet "
#~ "holding the collateral to the latest "
#~ "version and follow the instructions "
#~ ":ref:`here <masternode-setup-start>`."
#~ msgstr ""

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Historia masternode, "
#~ "visit https://historia.network/wallets/ on your "
#~ "computer to find the link to the"
#~ " latest Historia Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Historia Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Historia Core (0.12.2.1"
#~ " in the example) by right clicking"
#~ " or pressing **Ctrl + V**::"
#~ msgstr ""

#~ msgid ""
#~ "Masternodes require regular maintenance to "
#~ "ensure you do not drop off the "
#~ "payment queue. This includes promptly "
#~ "installing updates to Historia, as well "
#~ "as maintaining the security and "
#~ "performance of the server. In addition,"
#~ " masternodes should vote on proposals "
#~ "and perform other tasks in the "
#~ "interest of the network and their "
#~ "own investment. This section covers the"
#~ " following topics:"
#~ msgstr ""

#~ msgid "xkcd's mn_queue: https://github.com/kxcd/mn_queue"
#~ msgstr ""

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Historia masternode, "
#~ "visit https://historia.network/wallets/ on your "
#~ "computer to find the link to the"
#~ " latest Historia Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Historia Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Historia Core (0.12.3.1"
#~ " in the example) by right clicking"
#~ " or pressing **Ctrl + V**::"
#~ msgstr ""

#~ msgid ""
#~ "historia, cryptocurrency, masternode, maintenance, "
#~ "maintain, payments, withdrawal, voting, "
#~ "monitoring"
#~ msgstr ""

#~ msgid "Payment withdrawals"
#~ msgstr ""

#~ msgid ""
#~ "Once your masternode has been accepted"
#~ " by the network, it will enter "
#~ "the masternode payment queue and slowly"
#~ " begin moving up. A masternode within"
#~ " the top 10% of the list is "
#~ "selected and receives a payment each "
#~ "time a new Historia block is mined."
#~ " For more details on this process,"
#~ " see here. These payments are sent"
#~ " to the same address you used "
#~ "to start your masternode, which means"
#~ " you need to be careful when "
#~ "withdrawing the payments. The original "
#~ "1000 HISTORIA payment you used to "
#~ "start your masternode must remain "
#~ "untouched in a single unspent "
#~ "transaction output (utxo) or your "
#~ "masternode will drop off the payment "
#~ "list - you may have seen this "
#~ "ID when preparing to send the "
#~ "start masternode command. Payments appear "
#~ "in separate UTXOs, so we need a"
#~ " method of only spending those UTXOs"
#~ " and not the one containing the "
#~ "1000 HISTORIA. Note that masternode payouts"
#~ " can only be spent after 100 "
#~ "confirmations."
#~ msgstr ""

#~ msgid "Option 1: Withdrawals using a hardware wallet"
#~ msgstr ""

#~ msgid ""
#~ "If you used a hardware wallet such"
#~ " as Trezor to start your masternode,"
#~ " you must also use this process "
#~ "to make payout withdrawals. Once again,"
#~ " we will be using Bertrand256's Historia"
#~ " Masternode Tool (DMT) to select the"
#~ " correct outputs. With DMT, we can"
#~ " select specific UTXOs to withdraw "
#~ "the payments without touching the "
#~ "original collateral transaction. This is "
#~ "not possible using the Trezor web "
#~ "wallet alone."
#~ msgstr ""

#~ msgid ""
#~ "Open DMT and verify the RPC and"
#~ " HW connections are working. From the"
#~ " **Tools** menu, select **Transfer funds"
#~ " from current masternode's address** or "
#~ "**Transfer funds from all masternode's "
#~ "addresses**, if you use DMT to "
#~ "control multiple masternodes."
#~ msgstr ""

#~ msgid "Selecting the transfer funds function in DMT"
#~ msgstr ""

#~ msgid ""
#~ "DMT will load for a moment, then"
#~ " display a window showing the "
#~ "available UTXOs you can use in "
#~ "your withdrawal. By default, all UTXOs"
#~ " not used as masternode collateral "
#~ "are checked. The masternode collateral "
#~ "UTXOs are not only unchecked but "
#~ "also hidden in order to avoid "
#~ "unintentionally sending funds associated with"
#~ " collateral and stopping your masternode."
#~ " You can show these hidden entries"
#~ " by unchecking the **Hide collateral "
#~ "utxos** option. Enter your destination "
#~ "address for the transaction. The window"
#~ " should appear as follows:"
#~ msgstr ""

#~ msgid "Selecting the UTXOs to use as inputs in the withdrawal transaction"
#~ msgstr ""

#~ msgid ""
#~ "Verify the transaction fee and click "
#~ "**Send**. Your Trezor will prompt to "
#~ "enter your PIN and confirm the "
#~ "transaction on the device. Once this "
#~ "is done, confirm one more time to"
#~ " DMT that you want to broadcast "
#~ "the transaction to the network by "
#~ "clicking Yes. A confirmation with the"
#~ " transaction ID will appear."
#~ msgstr ""

#~ msgid "Confirming broadcast of the transaction to the network"
#~ msgstr ""

#~ msgid "Option 2: Withdrawals from Historia Core wallet"
#~ msgstr ""

#~ msgid ""
#~ "Similar to DMT as described above, "
#~ "we need a method in Historia Core "
#~ "wallet to restrict which UTXOs are "
#~ "spent when making withdrawals from a "
#~ "masternode address to ensure that the"
#~ " collateral UTXO is not touched. In"
#~ " Historia Core wallet, this feature is"
#~ " known as Coin Control, and it "
#~ "must be enabled before you can use"
#~ " it. Click **Settings > Options > "
#~ "Wallet > Enable coin control features**."
#~ " Now, when you go to the "
#~ "**Send** tab in your wallet, a new"
#~ " button labelled **Inputs...** will appear."
#~ " Click this button to select which"
#~ " UTXOs can be used as input for"
#~ " any transactions you create. The "
#~ "following window appears:"
#~ msgstr ""

#~ msgid ""
#~ "Coin Selection window in Historia Core "
#~ "wallet, showing two masternodes (testnet)"
#~ msgstr ""

#~ msgid ""
#~ "Right click on the transaction(s) "
#~ "showing an amount of 1000 HISTORIA, "
#~ "then select **Lock unspent**. A small"
#~ " lock will appear next to the "
#~ "transaction. Then click **OK**. You can"
#~ " now safely create transactions with "
#~ "your remaining funds without affecting "
#~ "the original collateral UTXOs."
#~ msgstr ""

#~ msgid "Locking UTXOs in Historia Core wallet"
#~ msgstr ""

#~ msgid "How to update a masternode"
#~ msgstr ""

#~ msgid ""
#~ "Periodically, the Historia Core development "
#~ "team will release updates to Historia. "
#~ "Since normal nodes rely on them "
#~ "for services and copies of the "
#~ "blockchain, masternodes are expected to "
#~ "update to new versions of Historia and"
#~ " Sentinel promptly. In some cases, "
#~ "hardware upgrades (more CPU, RAM or "
#~ "disk space, or even custom GPU/ASIC "
#~ "hardware) may also be necessary. Not "
#~ "updating will eventually result in your"
#~ " masternode being removed from the "
#~ "payment queue. If you run a hosted"
#~ " masternode, your host will take care"
#~ " of updates for you. If not, "
#~ "the method of updating depends on "
#~ "how you installed Historia."
#~ msgstr ""

#~ msgid ""
#~ "Minor version updates to Historia (e.g. "
#~ "from 0.12.3.1 to 0.12.3.2) do not "
#~ "make changes to the protocol version,"
#~ " while major version updates (e.g. "
#~ "from 0.12.2.3 to 0.12.3.0) will usually"
#~ " increase the network protocol version. "
#~ "If the protocol version did not "
#~ "change, you DO NOT need to restart"
#~ " your masternode if you complete the"
#~ " update within 60 minutes. If the "
#~ "protocol version did change, you must"
#~ " issue a start command from your "
#~ "wallet. Do not send start commands "
#~ "to your masternode if not necessary, "
#~ "as it will send you to the "
#~ "back of the payment queue."
#~ msgstr ""

#~ msgid "Option 1: Automated update using historiaman"
#~ msgstr ""

#~ msgid ""
#~ "If you are doing a major version"
#~ " update and need to restart your "
#~ "masternode, update the software version "
#~ "of the wallet holding the collateral "
#~ "to the latest version now by "
#~ "following the instructions :ref:`here "
#~ "<masternode-setup-start>`. Continue monitoring"
#~ " your masternode. After some time, "
#~ "all statuses should turn green, in "
#~ "particular **masternode started: YES** and "
#~ "**masternode network state: ENABLED**."
#~ msgstr ""

#~ msgid ""
#~ "To update Historia manually, log in to"
#~ " your server using ssh or PuTTY. "
#~ "First we need to stop Historia "
#~ "running::"
#~ msgstr ""

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Historia masternode, "
#~ "visit https://historia.network/wallets/ on your "
#~ "computer to find the link to the"
#~ " latest Historia Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Historia Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Historia Core by "
#~ "right clicking or pressing **Ctrl + "
#~ "V**::"
#~ msgstr ""

#~ msgid ""
#~ "Verify the integrity of your download"
#~ " by running the following command and"
#~ " comparing the output against the "
#~ "value for the file as shown on "
#~ "the Historia website under **Hash File**::"
#~ msgstr ""

#~ msgid "Link to the hash file to verify download integrity"
#~ msgstr ""

#~ msgid ""
#~ "Remove the old binaries from the "
#~ "working directory, extract the compressed "
#~ "archive, copy the new files to the"
#~ " directory and set them as "
#~ "executable::"
#~ msgstr ""

#~ msgid "Clean up unneeded files::"
#~ msgstr ""

#~ msgid ""
#~ "If the protocol version changed during"
#~ " this update, you will need to "
#~ "issue a start command from your "
#~ "wallet. If you are using a "
#~ "hardware wallet, you can issue the "
#~ "start command by simply clicking the "
#~ "button in DMT. If you are using"
#~ " Historia Core wallet, update it to "
#~ "the latest version, then open the "
#~ "debug console and enter this command,"
#~ " where MN1 is the alias for "
#~ "your masternode::"
#~ msgstr ""

#~ msgid "Monitor the status of your masternode as it starts up::"
#~ msgstr ""

#~ msgid ""
#~ "In particular, the last command should"
#~ " return the status **Masternode "
#~ "successfully started**. If you see an"
#~ " error similar to **Invalid protocol "
#~ "version**, then the protocol version has"
#~ " changed and you must send a "
#~ "start command from your wallet again."
#~ " You can also monitor the status "
#~ "of your masternode from Sentinel. If "
#~ "Sentinel detects a functioning masternode, "
#~ "the following command should return "
#~ "nothing::"
#~ msgstr ""

#~ msgid ""
#~ "Finally, you can check for your "
#~ "masternode by its collateral address "
#~ "using `HistoriaNinja <https://www.historianinja.pl/>`_, or"
#~ " search the consensus list of "
#~ "masternodes using this command and "
#~ "entering your masternode IP address::"
#~ msgstr ""

#~ msgid "Finding your position in the payment queue"
#~ msgstr ""

#~ msgid ""
#~ "Prior to Historia 0.12.4, each masternode"
#~ " may have a slightly different view"
#~ " of the network. In addition, "
#~ "selection from the top 10% of "
#~ "masternodes in the list in the "
#~ ":ref:`selection pool <payment-logic>` is "
#~ "random. This means that there is "
#~ "no definite answer to when your "
#~ "masternode will be selected for payment."
#~ " However, it is possible to make "
#~ "an approximation based on the time "
#~ "your masternode entered the back of "
#~ "the queue."
#~ msgstr ""

#~ msgid ""
#~ "Community members xkcd, Bertrand256 and "
#~ "moocowmoo have all published various "
#~ "tools you can run to determine "
#~ "your approximate position in the payment"
#~ " queue, and bots are available on "
#~ "Discord and Slack as well."
#~ msgstr ""

#~ msgid "mn_queue: https://github.com/kxcd/mn_queue"
#~ msgstr ""

#~ msgid "Historiaman: https://github.com/moocowmoo/historiaman"
#~ msgstr ""

#~ msgid "DMT: https://github.com/Bertrand256/historia-masternode-tool"
#~ msgstr ""

